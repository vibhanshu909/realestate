{"version":3,"sources":["pages/Site.tsx","components/Tabs.tsx","components/User.tsx","pages/ManagerDashboardPage.tsx","pages/ManagerDashboard.tsx"],"names":["siteColumnData","id","numeric","disablePadding","colSpan","label","siteExclude","Site","withStyles","theme","createStyles","root","width","fab","position","bottom","spacing","unit","right","lastEntryOn","padding","props","classes","history","restProps","Object","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_4___default","container","className","item","xs","_components_Mutation__WEBPACK_IMPORTED_MODULE_7__","mutation","SITE_TABLE","lmutate","args","_components_Query__WEBPACK_IMPORTED_MODULE_8__","query","SITE_TABLE_QUERY","_ref","siteTable","data","DELETE_SITES","deleteSites","page","rowsPerPage","SITES","variables","limit","skip","_ref2","loading","refetch","_components_Enhanced_Table_Table__WEBPACK_IMPORTED_MODULE_16__","assign","sites","title","settings","count","length","columnData","exclude","options","onView","e","push","Routes","detail","onDelete","_onDelete","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","mark","_callee","delArgs","wrap","_context","prev","next","defaultState","stop","_x","apply","this","arguments","onAdd","create","render","commanRender","match","key","renderValue","_ref3","value","rest","RENDER_VALUE","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","formatDate","mutate","_ref4","_callee2","largs","_context2","_x2","TabContainer","children","dir","react__WEBPACK_IMPORTED_MODULE_10___default","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_9___default","component","EnhancedTabs","backgroundColor","palette","background","paper","app","marginTop","content","selected","secondary","light","color","contrastText","withTheme","_React$PureComponent","_class","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","_this$props","_this$props2","defaults","localStateQuery","localStateMutation","result","tabs","containers","map","_material_ui_core_Tab__WEBPACK_IMPORTED_MODULE_7___default","tab","direction","_components_Mutation__WEBPACK_IMPORTED_MODULE_12__","_components_Query__WEBPACK_IMPORTED_MODULE_13__","enhancedTabs","keys","_material_ui_core_AppBar__WEBPACK_IMPORTED_MODULE_5___default","_material_ui_core_Tabs__WEBPACK_IMPORTED_MODULE_8___default","onChange","_","indicatorColor","react_swipeable_views__WEBPACK_IMPORTED_MODULE_11___default","axis","index","onChangeIndex","React","PureComponent","User","objectSpread","mixins","gutters","paddingTop","paddingBottom","user","react_default","Query","USER","error","Paper_default","Grid_default","sm","Typography_default","variant","username","toCurrency","siteCount","style","totalReceivedAmount","balance","undefined","spent","ManagerDashboardPage","objectWithoutProperties","components_User","TableWrapper","tableMutation","tableQuery","dataQuery","tableSettings","Table","selectable","asyncToGenerator","regenerator_default","ManagerDashboard","pages_ManagerDashboardPage","Tabs","ENHANCED_TABS","ENHANCED_TABS_QUERY"],"mappings":"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","file":"static/js/6.33871095.chunk.js","sourcesContent":["import Grid from '@material-ui/core/Grid'\nimport {\n  createStyles,\n  Theme,\n  withStyles,\n  WithStyles,\n} from '@material-ui/core/styles'\nimport React from 'react'\nimport Mutation from '../components/Mutation'\nimport Query from '../components/Query'\nimport { defaultState } from '../graphql/resolvers'\nimport { Routes } from '../Router'\nimport formatDate from '../utils/date'\n\nimport { SITE_TABLE as SITE_TABLE_QUERY } from '../graphql/query/local'\nimport { SITES } from '../graphql/query/remote'\n\nimport { SITE_TABLE } from '../graphql/mutation/local'\nimport { DELETE_SITES } from '../graphql/mutation/remote'\n\nimport EnhancedTable from '../components/Enhanced/Table/Table'\nimport commanRender, { RENDER_VALUE } from '../utils/commanRender'\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n    },\n    fab: {\n      position: 'fixed',\n      width: '4rem',\n      bottom: theme.spacing.unit * 2,\n      right: theme.spacing.unit * 2,\n    },\n    lastEntryOn: {\n      padding: '0 !important',\n    },\n  })\n\nexport const siteColumnData = [\n  {\n    id: 'createdAt',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Created At',\n  },\n  {\n    id: 'name',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Name',\n  },\n  {\n    id: 'location',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Location',\n  },\n  {\n    id: 'entryCount',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Total Entries',\n  },\n  {\n    id: 'lastEntryDate',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Last Entry On',\n  },\n  {\n    id: 'manager',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Manager',\n  },\n  {\n    id: 'managerSpentAmount',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Manager Spent Amount (₹)',\n  },\n  {\n    id: 'Total Cost',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Total Cost (₹)',\n  },\n]\nexport const siteExclude = [\n  'id',\n  'count',\n  'total',\n  'createdAt',\n  'updatedAt',\n  '__typename',\n]\n\ninterface ISiteProps extends WithStyles<typeof styles> {\n  history?: any\n}\n\nconst Site = withStyles(styles)((props: ISiteProps) => {\n  const { classes, history, ...restProps } = props\n  return (\n    <div>\n      <Grid container={true} className={classes.root}>\n        <Grid item={true} xs={12}>\n          <Mutation mutation={SITE_TABLE}>\n            {(lmutate: Function, args: IGraphqlData) => {\n              return (\n                <Query query={SITE_TABLE_QUERY}>\n                  {({ data: { siteTable } }: IGraphqlData) => {\n                    return (\n                      <Mutation mutation={DELETE_SITES}>\n                        {(deleteSites: Function) => {\n                          const { page, rowsPerPage } = siteTable\n                          return (\n                            <Query\n                              query={SITES}\n                              variables={{\n                                limit: rowsPerPage,\n                                skip: page * rowsPerPage,\n                              }}\n                            >\n                              {({ loading, data, refetch }: IGraphqlData) => {\n                                // refetch();\n                                return (\n                                  <EnhancedTable\n                                    {...restProps}\n                                    loading={loading}\n                                    data={data.sites}\n                                    title='Sites'\n                                    settings={siteTable}\n                                    count={\n                                      (data.sites.length &&\n                                        data.sites[0].count) ||\n                                      data.sites.length\n                                    }\n                                    columnData={siteColumnData}\n                                    exclude={siteExclude}\n                                    options={{\n                                      onView: (e: any) =>\n                                        history.push(\n                                          Routes.Site.detail({ id: e }),\n                                        ),\n                                      // onEdit: (e: any) => history.push(Routes.Site.update({ id: e, edit: true })),\n                                      onDelete: async (delArgs: any) => {\n                                        await deleteSites({\n                                          variables: delArgs,\n                                        })\n                                        await lmutate({\n                                          variables: defaultState.siteTable,\n                                        })\n                                        refetch()\n                                      },\n                                      onAdd: () =>\n                                        history.push(Routes.Site.create()),\n                                    }}\n                                    render={commanRender({\n                                      match: 'managerSpentAmount',\n                                      classes: (key: string) =>\n                                        key === 'lastEntryDate'\n                                          ? classes.lastEntryOn\n                                          : '',\n                                      renderValue: ({\n                                        key,\n                                        value,\n                                        ...rest\n                                      }: any) => {\n                                        if (key === 'lastEntryDate') {\n                                          return RENDER_VALUE({\n                                            key,\n                                            value: formatDate(value),\n                                            ...rest,\n                                          })\n                                        }\n                                        return RENDER_VALUE({\n                                          key,\n                                          value,\n                                          ...rest,\n                                        })\n                                      },\n                                    })}\n                                    mutate={async largs => {\n                                      await lmutate({ variables: largs })\n                                      // refetch();\n                                    }}\n                                  />\n                                )\n                              }}\n                            </Query>\n                          )\n                        }}\n                      </Mutation>\n                    )\n                  }}\n                </Query>\n              )\n            }}\n          </Mutation>\n        </Grid>\n      </Grid>\n    </div>\n  )\n})\n\nexport default Site\n","import AppBar from '@material-ui/core/AppBar'\nimport {\n  createStyles,\n  Theme,\n  withStyles,\n  WithStyles,\n} from '@material-ui/core/styles'\nimport Tab from '@material-ui/core/Tab'\nimport Tabs from '@material-ui/core/Tabs'\nimport Typography from '@material-ui/core/Typography'\nimport React from 'react'\nimport SwipeableViews from 'react-swipeable-views'\nimport Mutation from '../components/Mutation'\nimport Query from '../components/Query'\n\nfunction TabContainer({ children, dir }: any) {\n  return (\n    <Typography component='div' dir={dir}>\n      {children}\n    </Typography>\n  )\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      width: '100%',\n    },\n    app: {\n      marginTop: theme.spacing.unit * 8,\n    },\n    content: {\n      marginTop: theme.spacing.unit * 5,\n    },\n    selected: {\n      backgroundColor: theme.palette.secondary.light,\n      color: theme.palette.secondary.contrastText,\n    },\n  })\n\ninterface IEnhancedTabsProps extends WithStyles<typeof styles, true> {\n  defaults: any[]\n  localStateQuery: any\n  localStateMutation: any\n}\n\nconst EnhancedTabs = withStyles(styles, { withTheme: true })(\n  class extends React.PureComponent<IEnhancedTabsProps> {\n    render() {\n      const { classes, theme } = this.props\n      const { defaults, localStateQuery, localStateMutation } = this.props\n      const result: { tabs: any[]; containers: any[] } = {\n        tabs: [],\n        containers: [],\n      }\n      defaults.map((e: any) => {\n        result.tabs.push(\n          <Tab\n            label={e.tab}\n            key={e.tab}\n            classes={{ selected: classes.selected }}\n          />,\n        )\n        result.containers.push(\n          <TabContainer dir={theme.direction} key={e.tab + '_container'}>\n            {e.container}\n          </TabContainer>,\n        )\n        return null\n      })\n\n      return (\n        <Mutation mutation={localStateMutation}>\n          {(lmutate: Function) => {\n            return (\n              <Query query={localStateQuery}>\n                {({ data }: any) => {\n                  const enhancedTabs = data[Object.keys(data)[0]]\n                  return (\n                    <div className={classes.root}>\n                      <AppBar color='default' className={classes.app}>\n                        <Tabs\n                          value={enhancedTabs.value}\n                          onChange={(_, value) =>\n                            lmutate({ variables: { value } })\n                          }\n                          indicatorColor='secondary'\n                        >\n                          {result.tabs}\n                        </Tabs>\n                      </AppBar>\n                      <SwipeableViews\n                        className={classes.content}\n                        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                        index={enhancedTabs.value}\n                        onChangeIndex={value =>\n                          lmutate({ variables: { value } })\n                        }\n                      >\n                        {result.containers}\n                      </SwipeableViews>\n                    </div>\n                  )\n                }}\n              </Query>\n            )\n          }}\n        </Mutation>\n      )\n    }\n  },\n)\nexport default EnhancedTabs\n","import Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport { createStyles, withStyles, WithStyles } from '@material-ui/core/styles'\nimport { Theme } from '@material-ui/core/styles/createMuiTheme'\nimport Typography from '@material-ui/core/Typography'\nimport React from 'react'\nimport { USER } from '../graphql/query/remote'\nimport { RENDER_VALUE } from '../utils/commanRender'\nimport toCurrency from '../utils/toCurrency'\nimport Query from './Query'\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    paper: {\n      ...theme.mixins.gutters(),\n      paddingTop: theme.spacing.unit * 2,\n      paddingBottom: theme.spacing.unit * 2,\n    },\n  })\n\ninterface IUser extends WithStyles<typeof styles> {\n  user: any\n}\n\nconst User = withStyles(styles)((props: IUser) => {\n  const { classes, user } = props\n  return (\n    <Query query={USER} variables={{ id: user.id }}>\n      {({ loading, error, data: { user } }: IGraphqlData) => {\n        if (loading) {\n          return <span>loading...</span>\n        } else if (error) {\n          return <span>Error Occured!</span>\n        }\n        return (\n          <Paper className={classes.paper}>\n            <Grid container={true} spacing={32}>\n              <Grid item={true} container={true} direction='column' sm={6}>\n                <Grid item={true}>\n                  <Typography\n                    variant='headline'\n                    className='ttc'\n                    color='primary'\n                  >\n                    Username: {user.username}\n                  </Typography>\n                </Grid>\n                <Grid item={true}>\n                  <Typography\n                    variant='headline'\n                    className='ttc'\n                    color='secondary'\n                  >\n                    Total Sites: {toCurrency(user.siteCount)}\n                  </Typography>\n                </Grid>\n              </Grid>\n              <Grid item={true} container={true} direction='column' sm={6}>\n                <Grid item={true}>\n                  <Typography variant='subheading'>\n                    Total Received Amount (₹):{' '}\n                    <span\n                      style={{\n                        color:\n                          RENDER_VALUE({\n                            value: user.totalReceivedAmount,\n                            balance: false,\n                          }).color || undefined,\n                      }}\n                    >\n                      {RENDER_VALUE({ value: user.totalReceivedAmount }).value}\n                    </span>\n                  </Typography>\n                </Grid>\n                <Grid item={true}>\n                  <Typography variant='subheading'>\n                    Total Spent Amount (₹): {toCurrency(user.spent)}\n                  </Typography>\n                </Grid>\n                <Grid item={true}>\n                  <Typography variant='subheading'>\n                    Total Balance (₹):{' '}\n                    <span\n                      style={{\n                        color:\n                          RENDER_VALUE({ value: user.balance, balance: false })\n                            .color || undefined,\n                      }}\n                    >\n                      {RENDER_VALUE({ value: user.balance }).value}\n                    </span>\n                  </Typography>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Paper>\n        )\n      }}\n    </Query>\n  )\n})\n\nexport default User\n","import { createStyles, Theme, withStyles } from '@material-ui/core/styles'\nimport React from 'react'\nimport EnhancedTable from '../components/Enhanced/Table/Table'\nimport TableWrapper from '../components/TableWrapper'\nimport User from '../components/User'\nimport { SITE_TABLE } from '../graphql/mutation/local'\nimport { SITE_TABLE as SITE_TABLE_QUERY } from '../graphql/query/local'\nimport { SITES } from '../graphql/query/remote'\nimport { defaultState } from '../graphql/resolvers'\nimport { Routes } from '../Router'\nimport commanRender, { RENDER_VALUE } from '../utils/commanRender'\nimport formatDate from '../utils/date'\nimport { siteColumnData, siteExclude } from './Site'\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      // padding: '0',\n    },\n    paper: {\n      ...theme.mixins.gutters(),\n      paddingTop: theme.spacing.unit * 2,\n      paddingBottom: theme.spacing.unit * 2,\n    },\n    fab: {\n      position: 'fixed',\n      width: '8rem',\n      bottom: theme.spacing.unit * 2,\n      right: theme.spacing.unit * 2,\n    },\n    lastEntryOn: {\n      padding: '0 !important',\n    },\n  })\n\nconst ManagerDashboardPage = withStyles(styles)((props: any) => {\n  const { classes, history, ...restProps } = props\n  const { siteTable } = defaultState\n  // updateQuery(data);\n  return (\n    <div>\n      <User {...props} />\n      <TableWrapper\n        tableMutation={SITE_TABLE}\n        tableQuery={SITE_TABLE_QUERY}\n        dataQuery={SITES}\n        defaultState={siteTable}\n      >\n        {(\n          tableSettings: typeof siteTable,\n          lmutate: Function,\n          { loading, data, refetch }: IGraphqlData,\n        ) => {\n          return (\n            <EnhancedTable\n              {...restProps}\n              loading={loading}\n              data={data.sites}\n              title={'Sites'}\n              settings={tableSettings}\n              refetch={refetch}\n              count={\n                (data.sites.length && data.sites[0].count) || data.sites.length\n              }\n              columnData={siteColumnData}\n              exclude={siteExclude}\n              options={{\n                selectable: false,\n                onView: (e: any) => history.push(Routes.Site.detail({ id: e })),\n              }}\n              render={commanRender({\n                match: 'managerSpentAmount',\n                classes: (key: string) =>\n                  key === 'lastEntryDate' ? classes.lastEntryOn : '',\n                renderValue: ({ key, value, ...rest }: any) => {\n                  if (key === 'lastEntryDate') {\n                    return RENDER_VALUE({\n                      key,\n                      value: formatDate(value),\n                      ...rest,\n                    })\n                  }\n                  return RENDER_VALUE({ key, value, ...rest })\n                },\n              })}\n              mutate={async args => {\n                await lmutate({ variables: args })\n                // refetch();\n              }}\n            />\n          )\n        }}\n      </TableWrapper>\n    </div>\n  )\n})\n\nexport default ManagerDashboardPage\n","import React, { PureComponent } from 'react'\nimport Tabs from '../components/Tabs'\nimport { ENHANCED_TABS } from '../graphql/mutation/local'\nimport { ENHANCED_TABS as ENHANCED_TABS_QUERY } from '../graphql/query/local'\nimport ManagerDashboardPage from './ManagerDashboardPage'\n// import { StockPage } from './Stock/StockPage'\n// import { TransactionPage } from './Stock/Transaction'\n\n// const QUERY = gql`\n//   query supplierTransactions($id: ID!, $limit: Int!, $skip: Int) {\n//     supplierTransactions(id: $id, limit: $limit, skip: $skip) {\n//       totalCount\n//       edges {\n//         id\n//         stock {\n//           name\n//         }\n//         quantity\n//         type\n//         available\n//         supplier {\n//           name: username\n//         }\n//         note\n//         createdAt\n//       }\n//     }\n//   }\n// `\nclass ManagerDashboard extends PureComponent {\n  render() {\n    // const { me } = this.props as any\n    const defaults = [\n      {\n        tab: 'Site',\n        container: <ManagerDashboardPage {...this.props} />,\n      },\n      // {\n      //   tab: 'Stock',\n      //   container: (\n      //     <StockPage {...this.props} optionable={me.stockPermission} />\n      //   ),\n      // },\n      // {\n      //   tab: 'Transaction',\n      //   container: (\n      //     <TransactionPage\n      //       {...this.props}\n      //       query={QUERY}\n      //       getQueryVariables={() => ({\n      //         id: me.id,\n      //       })}\n      //     />\n      //   ),\n      // },\n    ]\n    return (\n      <Tabs\n        defaults={defaults}\n        localStateMutation={ENHANCED_TABS}\n        localStateQuery={ENHANCED_TABS_QUERY}\n      />\n    )\n    // if (me && me.stockPermission) {\n    // }\n    // return <ManagerDashboardPage {...this.props} />\n  }\n}\n\nexport default ManagerDashboard\n"],"sourceRoot":""}