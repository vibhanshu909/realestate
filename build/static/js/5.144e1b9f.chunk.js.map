{"version":3,"sources":["pages/Site.tsx"],"names":["siteColumnData","id","numeric","disablePadding","colSpan","label","siteExclude","Site","withStyles","theme","createStyles","root","width","fab","position","bottom","spacing","unit","right","lastEntryOn","padding","props","classes","history","restProps","Object","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_4___default","container","className","item","xs","_components_Mutation__WEBPACK_IMPORTED_MODULE_7__","mutation","SITE_TABLE","lmutate","args","_components_Query__WEBPACK_IMPORTED_MODULE_8__","query","SITE_TABLE_QUERY","_ref","siteTable","data","DELETE_SITES","deleteSites","page","rowsPerPage","SITES","variables","limit","skip","_ref2","loading","refetch","_components_Enhanced_Table_Table__WEBPACK_IMPORTED_MODULE_16__","assign","sites","title","settings","count","length","columnData","exclude","options","onView","e","push","Routes","detail","onDelete","_onDelete","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","mark","_callee","delArgs","wrap","_context","prev","next","defaultState","stop","this","_x","apply","arguments","onAdd","create","render","commanRender","match","key","renderValue","_ref3","value","rest","RENDER_VALUE","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","formatDate","mutate","_ref4","_callee2","largs","_context2","_x2"],"mappings":"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","file":"static/js/5.144e1b9f.chunk.js","sourcesContent":["import Grid from '@material-ui/core/Grid'\nimport {\n  createStyles,\n  Theme,\n  withStyles,\n  WithStyles,\n} from '@material-ui/core/styles'\nimport React from 'react'\nimport Mutation from '../components/Mutation'\nimport Query from '../components/Query'\nimport { defaultState } from '../graphql/resolvers'\nimport { Routes } from '../Router'\nimport formatDate from '../utils/date'\n\nimport { SITE_TABLE as SITE_TABLE_QUERY } from '../graphql/query/local'\nimport { SITES } from '../graphql/query/remote'\n\nimport { SITE_TABLE } from '../graphql/mutation/local'\nimport { DELETE_SITES } from '../graphql/mutation/remote'\n\nimport EnhancedTable from '../components/Enhanced/Table/Table'\nimport commanRender, { RENDER_VALUE } from '../utils/commanRender'\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n    },\n    fab: {\n      position: 'fixed',\n      width: '4rem',\n      bottom: theme.spacing.unit * 2,\n      right: theme.spacing.unit * 2,\n    },\n    lastEntryOn: {\n      padding: '0 !important',\n    },\n  })\n\nexport const siteColumnData = [\n  {\n    id: 'createdAt',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Created At',\n  },\n  {\n    id: 'name',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Name',\n  },\n  {\n    id: 'location',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Location',\n  },\n  {\n    id: 'entryCount',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Total Entries',\n  },\n  {\n    id: 'lastEntryDate',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Last Entry On',\n  },\n  {\n    id: 'manager',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Manager',\n  },\n  {\n    id: 'managerSpentAmount',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Manager Spent Amount (₹)',\n  },\n  {\n    id: 'Total Cost',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Total Cost (₹)',\n  },\n]\nexport const siteExclude = [\n  'id',\n  'count',\n  'total',\n  'createdAt',\n  'updatedAt',\n  '__typename',\n]\n\ninterface ISiteProps extends WithStyles<typeof styles> {\n  history?: any\n}\n\nconst Site = withStyles(styles)((props: ISiteProps) => {\n  const { classes, history, ...restProps } = props\n  return (\n    <div>\n      <Grid container={true} className={classes.root}>\n        <Grid item={true} xs={12}>\n          <Mutation mutation={SITE_TABLE}>\n            {(lmutate: Function, args: IGraphqlData) => {\n              return (\n                <Query query={SITE_TABLE_QUERY}>\n                  {({ data: { siteTable } }: IGraphqlData) => {\n                    return (\n                      <Mutation mutation={DELETE_SITES}>\n                        {(deleteSites: Function) => {\n                          const { page, rowsPerPage } = siteTable\n                          return (\n                            <Query\n                              query={SITES}\n                              variables={{\n                                limit: rowsPerPage,\n                                skip: page * rowsPerPage,\n                              }}\n                            >\n                              {({ loading, data, refetch }: IGraphqlData) => {\n                                // refetch();\n                                return (\n                                  <EnhancedTable\n                                    {...restProps}\n                                    loading={loading}\n                                    data={data.sites}\n                                    title='Sites'\n                                    settings={siteTable}\n                                    count={\n                                      (data.sites.length &&\n                                        data.sites[0].count) ||\n                                      data.sites.length\n                                    }\n                                    columnData={siteColumnData}\n                                    exclude={siteExclude}\n                                    options={{\n                                      onView: (e: any) =>\n                                        history.push(\n                                          Routes.Site.detail({ id: e }),\n                                        ),\n                                      // onEdit: (e: any) => history.push(Routes.Site.update({ id: e, edit: true })),\n                                      onDelete: async (delArgs: any) => {\n                                        await deleteSites({\n                                          variables: delArgs,\n                                        })\n                                        await lmutate({\n                                          variables: defaultState.siteTable,\n                                        })\n                                        refetch()\n                                      },\n                                      onAdd: () =>\n                                        history.push(Routes.Site.create()),\n                                    }}\n                                    render={commanRender({\n                                      match: 'managerSpentAmount',\n                                      classes: (key: string) =>\n                                        key === 'lastEntryDate'\n                                          ? classes.lastEntryOn\n                                          : '',\n                                      renderValue: ({\n                                        key,\n                                        value,\n                                        ...rest\n                                      }: any) => {\n                                        if (key === 'lastEntryDate') {\n                                          return RENDER_VALUE({\n                                            key,\n                                            value: formatDate(value),\n                                            ...rest,\n                                          })\n                                        }\n                                        return RENDER_VALUE({\n                                          key,\n                                          value,\n                                          ...rest,\n                                        })\n                                      },\n                                    })}\n                                    mutate={async largs => {\n                                      await lmutate({ variables: largs })\n                                      // refetch();\n                                    }}\n                                  />\n                                )\n                              }}\n                            </Query>\n                          )\n                        }}\n                      </Mutation>\n                    )\n                  }}\n                </Query>\n              )\n            }}\n          </Mutation>\n        </Grid>\n      </Grid>\n    </div>\n  )\n})\n\nexport default Site\n"],"sourceRoot":""}