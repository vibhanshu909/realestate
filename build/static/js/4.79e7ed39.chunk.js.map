{"version":3,"sources":["components/forms/Form.tsx","components/forms/CreateUser.tsx"],"names":["Form","defaults","data","_this","this","result","Object","keys","forEach","e","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","type","default","getDate","Array","current","mapping","value","Boolean","Error","mergeData","_this2","_this$props$match$par","props","match","params","_this$props$match$par2","edit","restParams","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_this$props","query","_this$props$getQueryV","getQueryVariables","_ref","id","prevDefaults","skipOnUpdate","clientOnly","filter","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","_Query__WEBPACK_IMPORTED_MODULE_10__","variables","fetchPolicy","_ref2","loading","error","newDefaults","assign","children","Function","update","queryResult","PureComponent","username","required","validate","length","password","totalReceivedAmount","label","startAdornment","react__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core_InputAdornment__WEBPACK_IMPORTED_MODULE_5___default","position","stockPermission","CreateUser","_Form__WEBPACK_IMPORTED_MODULE_9__","USER","_FormGenerator__WEBPACK_IMPORTED_MODULE_10__","mutation","UPDATE_USER","CREATE_USER","title","submitText","mutateFunc","fn"],"mappings":"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","file":"static/js/4.79e7ed39.chunk.js","sourcesContent":["import React, { PureComponent } from 'react'\nimport { getDate } from '../../utils/date'\nimport filter from '../../utils/filter'\nimport Query from '../Query'\n\ninterface IFormProps {\n  match?: any\n  query: string\n  defaults: any\n  skipOnUpdate?: string[]\n  clientOnly?: string[]\n}\n\nexport interface IProps {\n  match: any\n}\nclass Form extends PureComponent<IFormProps> {\n  mergeData(defaults: any, data: any) {\n    const result: any = {}\n    Object.keys(defaults).forEach(e => {\n      result[e] = { ...defaults[e] }\n      if (defaults[e].type === 'date') {\n        result[e].default = getDate(data[e])\n      } else if (defaults[e].default instanceof Array) {\n        result[e].current =\n          data[e] &&\n          (data[e][result[e].mapping && result[e].mapping.value] || data[e])\n      } else if (\n        typeof defaults[e].default === 'string' ||\n        typeof defaults[e].default === 'number'\n      ) {\n        result[e].default = data[e]\n      } else if (defaults[e].type === Boolean) {\n        result[e].default = data[e]\n      } else if (defaults[e].default instanceof Object) {\n        result[e].default = { ...this.mergeData(defaults[e].default, data[e]) }\n      } else {\n        throw new Error('merge error')\n      }\n    })\n    return result\n  }\n  render() {\n    const { edit = false, ...restParams }: any = this.props.match.params\n    const {\n      query,\n      getQueryVariables = ({ id }: { id: string }) => ({ id }),\n      defaults: prevDefaults,\n      skipOnUpdate,\n      clientOnly,\n    }: any = this.props\n    let defaults = prevDefaults\n    if (edit === 'edit') {\n      defaults = filter(prevDefaults, skipOnUpdate)\n      return (\n        <Query\n          query={query}\n          variables={getQueryVariables(restParams)}\n          fetchPolicy='cache-and-network'\n        >\n          {({ loading, error, data }: IGraphqlData) => {\n            if (loading) {\n              return <span>loading...</span>\n            } else if (error) {\n              return <span>Error Occured!</span>\n            }\n            let newDefaults = this.mergeData(\n              filter(defaults, clientOnly),\n              data[Object.keys(data)[0]],\n            )\n            newDefaults = Object.assign(defaults, newDefaults)\n            return (\n              this.props.children instanceof Function &&\n              this.props.children({\n                update: true,\n                defaults: newDefaults,\n                queryResult: data,\n              })\n            )\n          }}\n        </Query>\n      )\n    }\n    // else {\n    //   defaults = filter(defaults, clientOnly)\n    // }\n    return (\n      this.props.children instanceof Function &&\n      this.props.children({ update: false, defaults, queryResult: null })\n    )\n  }\n}\n\nexport default Form\n","import InputAdornment from '@material-ui/core/InputAdornment'\nimport React, { PureComponent } from 'react'\nimport { CREATE_USER, UPDATE_USER } from '../../graphql/mutation/remote'\nimport { USER } from '../../graphql/query/remote'\nimport Form from './Form'\nimport FormGenerator from './FormGenerator'\n\nconst defaults = {\n  username: {\n    type: 'text',\n    default: '',\n    required: true,\n    validate: (value: string) => {\n      return !value || value.length < 1 ? 'Field must not be empty' : null\n    },\n  },\n  password: {\n    type: 'text',\n    default: '',\n    required: true,\n  },\n  totalReceivedAmount: {\n    type: 'number',\n    default: 0,\n    required: true,\n    label: 'Total received amount',\n    startAdornment: <InputAdornment position='start'>â‚¹</InputAdornment>,\n  },\n  stockPermission: {\n    type: Boolean,\n    default: false,\n    label: 'Grant Stock permission',\n  },\n}\n\nclass CreateUser extends PureComponent<any> {\n  render() {\n    const { id } = this.props.match.params\n    return (\n      <Form\n        {...this.props}\n        query={USER}\n        defaults={defaults}\n        skipOnUpdate={['password', 'totalReceivedAmount']}\n      >\n        {({ update, defaults, queryResult }: IFormProps) => {\n          return (\n            <FormGenerator\n              {...this.props}\n              defaults={defaults}\n              mutation={update ? UPDATE_USER : CREATE_USER}\n              title={update ? 'Update this manager' : 'Create a new manager'}\n              submitText={update ? 'Update manager' : 'Create manager'}\n              mutateFunc={(fn, data) => fn({ variables: { id, data } })}\n            />\n          )\n        }}\n      </Form>\n    )\n  }\n}\n\nexport default CreateUser\n"],"sourceRoot":""}