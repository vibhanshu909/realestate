{"version":3,"sources":["components/Dialogs/PropertyCreditDialog.tsx","pages/Property.tsx"],"names":["defaults","amount","type","default","startAdornment","react_default","a","createElement","InputAdornment_default","position","note","nextDueDate","getDate","validate","val","Date","getTime","withStyles","styles","_CommanDialog","FormDialog","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this","open","state","_this$props","props","classes","history","selected","_this$props$negativeH","negativeHandler","handleClose","_this$props$positiveH","positiveHandler","_this$props$postMutat","postMutation","title","Mutation","mutation","PROPERTY_CREDIT","mutate","_ref","loading","error","data","Fragment","IconButton_default","aria-label","onClick","handleOpen","AttachMoney_default","Dialog_default","fullScreen","onClose","aria-labelledby","dist","onSubmit","e","then","goBack","DialogTitle_default","id","DialogContent_default","DialogContentText_default","getJSX","DialogActions_default","CircularProgress_default","className","progress","index_es","message","Button_default","color","autoFocus","size","disabled","CommanDialog","propertyColumnData","numeric","disablePadding","colSpan","label","propertyExclude","Property","theme","createStyles","root","width","fab","bottom","spacing","unit","right","restProps","objectWithoutProperties","Grid_default","container","item","xs","DELETE_PROPERTIES","deleteProperties","dloading","Query","query","PROPERTY_CREDIT_HISTORY_TOTAL","_ref2","propertyTotal","style","padding","margin","justify","variant","toCurrency","price","totalReceivedAmount","balance","TableWrapper","tableMutation","PROPERTY_TABLE","tableQuery","PROPERTY_TABLE_QUERY","dataQuery","PROPERTIES","defaultState","propertyTable","getQueryVariables","tableSettings","lmutate","_ref3","refetch","Table","assign","properties","settings","count","length","columnData","exclude","historyable","PROPERTY_CREDIT_HISTORY","credit","PropertyCreditDialog","m","variables","objectSpread","primaryButtonIcon","Home_default","options","onEdit","push","Routes","update","edit","onCredit","_onCredit","asyncToGenerator","regenerator_default","mark","_callee","fn","args","wrap","_context","prev","next","stop","_x","_x2","onDelete","_onDelete","_callee2","_context2","_x3","onAdd","create","render","commanRender","match","renderValue","_ref4","formatDate","getContactJSX","result","RENDER_VALUE","skip","String","_ref5","_callee3","_context3","_x4"],"mappings":"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","file":"static/js/9.f8c80c48.chunk.js","sourcesContent":["import { FormHelperText } from '@material-ui/core'\nimport Button from '@material-ui/core/Button'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogContentText from '@material-ui/core/DialogContentText'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport IconButton from '@material-ui/core/IconButton'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport { withStyles } from '@material-ui/core/styles'\nimport AttachMoneyIcon from '@material-ui/icons/AttachMoney'\nimport { Form } from 'informed'\nimport React from 'react'\nimport { PROPERTY_CREDIT } from '../../graphql/mutation/remote'\n// import { defaults as propertyDefaults } from '../forms/CreateProperty';\nimport { getDate } from '../../utils/date'\nimport { getJSX } from '../forms/FormGenerator'\nimport Mutation from '../Mutation'\nimport CommanDialog, { IProps, styles } from './CommanDialog'\n\nconst defaults = {\n  amount: {\n    type: 'number',\n    default: 0,\n    startAdornment: <InputAdornment position='start'>₹</InputAdornment>,\n  },\n  note: {\n    type: 'text',\n    default: '',\n    // startAdornment: <InputAdornment position='start'>₹</InputAdornment>,\n  },\n  nextDueDate: {\n    type: 'date',\n    default: getDate(),\n    validate: (val: any) => {\n      if (new Date(val).getTime() <= new Date(getDate()).getTime()) {\n        return 'Must be a future date'\n      }\n      return null\n    },\n  },\n}\n\ninterface IFormDialog extends IProps {\n  selected?: string\n}\n\nexport default withStyles(styles)(\n  class FormDialog extends CommanDialog<IFormDialog> {\n    render() {\n      const { open } = this.state\n      const {\n        classes,\n        history,\n        selected,\n        negativeHandler = () => this.handleClose(),\n        positiveHandler = () => null,\n        postMutation = () => null,\n      } = this.props\n      const title = 'Add Credit'\n      const content = 'Add credit amount to this property.'\n      return (\n        <div>\n          <Mutation mutation={PROPERTY_CREDIT}>\n            {(mutate: Function, { loading, error, data }: IGraphqlData) => {\n              return (\n                <React.Fragment>\n                  <IconButton\n                    aria-label='Credit'\n                    title='Credit'\n                    onClick={this.handleOpen}\n                  >\n                    <AttachMoneyIcon />\n                  </IconButton>\n                  {open ? (\n                    <Dialog\n                      fullScreen={false}\n                      open={open}\n                      onClose={negativeHandler}\n                      aria-labelledby={title}\n                      title={title}\n                    >\n                      <Form\n                        onSubmit={(e: any) => {\n                          positiveHandler(mutate, { data: e }, selected).then(\n                            (data: any) => {\n                              if (postMutation) {\n                                postMutation(data)\n                                this.handleClose()\n                              } else {\n                                history.goBack()\n                              }\n                            },\n                          )\n                        }}\n                      >\n                        <DialogTitle id={title}>{title}</DialogTitle>\n                        <DialogContent>\n                          <DialogContentText>{content}</DialogContentText>\n                          {getJSX(defaults)}\n                        </DialogContent>\n                        <DialogActions>\n                          {loading ? (\n                            <CircularProgress className={classes.progress} />\n                          ) : null}\n                          {error ? (\n                            <FormHelperText error={true}>\n                              {error.message}\n                            </FormHelperText>\n                          ) : null}\n                          <Button\n                            onClick={negativeHandler}\n                            color='primary'\n                            autoFocus={true}\n                          >\n                            Cancel\n                          </Button>\n                          <Button size='large' type='submit' disabled={loading}>\n                            Confirm\n                          </Button>\n                        </DialogActions>\n                      </Form>\n                    </Dialog>\n                  ) : null}\n                </React.Fragment>\n              )\n            }}\n          </Mutation>\n        </div>\n      )\n    }\n  },\n)\n","import { Paper, Typography } from '@material-ui/core'\nimport Grid from '@material-ui/core/Grid'\nimport {\n  createStyles,\n  Theme,\n  withStyles,\n  WithStyles,\n} from '@material-ui/core/styles'\nimport HomeIcon from '@material-ui/icons/Home'\nimport React from 'react'\nimport PropertyCreditDialog from '../components/Dialogs/PropertyCreditDialog'\nimport EnhancedTable from '../components/Enhanced/Table/Table'\nimport Mutation from '../components/Mutation'\nimport Query from '../components/Query'\nimport TableWrapper from '../components/TableWrapper'\nimport { PROPERTY_TABLE } from '../graphql/mutation/local'\nimport { DELETE_PROPERTIES } from '../graphql/mutation/remote'\nimport { PROPERTY_TABLE as PROPERTY_TABLE_QUERY } from '../graphql/query/local'\nimport {\n  PROPERTIES,\n  PROPERTY_CREDIT_HISTORY,\n  PROPERTY_CREDIT_HISTORY_TOTAL,\n} from '../graphql/query/remote'\nimport { defaultState } from '../graphql/resolvers'\nimport { Routes } from '../Router'\nimport commanRender, { RENDER_VALUE } from '../utils/commanRender'\nimport formatDate from '../utils/date'\nimport getContactJSX from '../utils/getContactJSX'\nimport toCurrency from '../utils/toCurrency'\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n    },\n    fab: {\n      position: 'fixed',\n      width: '4rem',\n      bottom: theme.spacing.unit * 2,\n      right: theme.spacing.unit * 2,\n    },\n  })\n\nexport const propertyColumnData = [\n  {\n    id: 'createdAt',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Created At',\n  },\n  {\n    id: 'name',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Name',\n  },\n  {\n    id: 'location',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Location',\n  },\n  {\n    id: 'price',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Price (₹)',\n  },\n  {\n    id: 'buyer',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Bought By',\n  },\n  {\n    id: 'buyerNumber',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Buyer\\'s Phone Number',\n  },\n  {\n    id: 'totalReceivedAmount',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Total Received Amount (₹)',\n  },\n  {\n    id: 'balance',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Balance Amount (₹)',\n  },\n  {\n    id: 'nextDueDate',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Next Due Date',\n  },\n  {\n    id: 'note',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Note',\n  },\n]\nexport const propertyExclude = [\n  'id',\n  'count',\n  'createdAt',\n  'updatedAt',\n  '__typename',\n]\n\ninterface IProperty extends WithStyles<typeof styles> {\n  history?: any\n}\nconst Property = withStyles(styles)((props: IProperty) => {\n  const { classes, history, ...restProps } = props\n  return (\n    <div>\n      <Grid container={true} className={classes.root}>\n        <Grid item={true} xs={12}>\n          <Mutation mutation={DELETE_PROPERTIES}>\n            {(\n              deleteProperties: Function,\n              { loading: dloading }: IGraphqlData,\n            ) => {\n              return (\n                <Query query={PROPERTY_CREDIT_HISTORY_TOTAL}>\n                  {({ loading, data: { propertyTotal } }: IGraphqlData) => {\n                    return (\n                      <React.Fragment>\n                        <Paper style={{ padding: '2rem', margin: '1rem 0rem' }}>\n                          <Grid container spacing={16} justify='space-between'>\n                            <Grid item>\n                              <Typography variant='subheading'>\n                                Total Price (₹):{' '}\n                                {toCurrency(propertyTotal.price)}\n                              </Typography>\n                            </Grid>\n                            <Grid item>\n                              <Typography variant='subheading'>\n                                Total Received Amount (₹):{' '}\n                                {toCurrency(propertyTotal.totalReceivedAmount)}\n                              </Typography>\n                            </Grid>\n                            <Grid item>\n                              <Typography variant='subheading'>\n                                Total Balance (₹):{' '}\n                                {toCurrency(propertyTotal.balance)}\n                              </Typography>\n                            </Grid>\n                          </Grid>\n                        </Paper>\n                        <TableWrapper\n                          tableMutation={PROPERTY_TABLE}\n                          tableQuery={PROPERTY_TABLE_QUERY}\n                          dataQuery={PROPERTIES}\n                          defaultState={defaultState.propertyTable}\n                          getQueryVariables={e => ({})}\n                        >\n                          {(\n                            tableSettings: typeof defaultState.propertyTable,\n                            lmutate: Function,\n                            { loading, data, refetch }: IGraphqlData,\n                          ) => {\n                            return (\n                              <EnhancedTable\n                                {...restProps}\n                                loading={loading || dloading}\n                                data={data.properties}\n                                title='Properties'\n                                settings={tableSettings}\n                                count={\n                                  (data.properties.length &&\n                                    data.properties[0].count) ||\n                                  data.properties.length\n                                }\n                                columnData={propertyColumnData}\n                                exclude={propertyExclude}\n                                historyable={PROPERTY_CREDIT_HISTORY}\n                                credit={\n                                  <PropertyCreditDialog\n                                    {...restProps}\n                                    positiveHandler={(m, e, selected) =>\n                                      m({ variables: { ...e, id: selected } })\n                                    }\n                                  />\n                                }\n                                primaryButtonIcon={<HomeIcon />}\n                                // menu={<EnhancedMenu/>}\n                                options={{\n                                  onEdit: (e: any) =>\n                                    history.push(\n                                      Routes.Property.update({\n                                        id: e,\n                                        edit: true,\n                                      }),\n                                    ),\n                                  onCredit: async (fn: Function, args: any) => {\n                                    await fn({ variables: args })\n                                    // refetch();\n                                  },\n                                  onDelete: async (args: any) => {\n                                    await deleteProperties({ variables: args })\n                                    await lmutate({\n                                      variables: defaultState.propertyTable,\n                                    })\n                                    refetch()\n                                  },\n                                  onAdd: () =>\n                                    history.push(Routes.Property.create()),\n                                }}\n                                render={commanRender({\n                                  match: 'totalReceivedAmount',\n                                  renderValue: ({\n                                    key,\n                                    value,\n                                  }: {\n                                    key: string\n                                    value: any\n                                  }) => {\n                                    if (key === 'nextDueDate') {\n                                      return { value: formatDate(value) }\n                                    } else if (key === 'buyerNumber') {\n                                      return { value: getContactJSX(value) }\n                                    }\n                                    const result = RENDER_VALUE({\n                                      key,\n                                      value,\n                                      skip: ['buyerNumber'],\n                                    })\n                                    return {\n                                      ...result,\n                                      value: String(value).length\n                                        ? result.value\n                                        : '-',\n                                    }\n                                  },\n                                })}\n                                mutate={async args => {\n                                  await lmutate({ variables: args })\n                                  // refetch();\n                                }}\n                              />\n                            )\n                          }}\n                        </TableWrapper>\n                      </React.Fragment>\n                    )\n                  }}\n                </Query>\n              )\n            }}\n          </Mutation>\n        </Grid>\n      </Grid>\n    </div>\n  )\n})\n\nexport default Property\n"],"sourceRoot":""}