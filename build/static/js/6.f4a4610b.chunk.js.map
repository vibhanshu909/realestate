{"version":3,"sources":["components/Tabs.tsx","pages/Site.tsx","pages/Stock/StockPage.tsx","pages/Stock/Transaction.tsx","components/User.tsx","pages/ManagerDashboardPage.tsx","pages/ManagerDashboard.tsx"],"names":["TabContainer","_ref","children","dir","react__WEBPACK_IMPORTED_MODULE_10___default","a","createElement","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_9___default","component","EnhancedTabs","withStyles","theme","createStyles","root","backgroundColor","palette","background","paper","width","app","marginTop","spacing","unit","content","selected","secondary","light","color","contrastText","withTheme","_React$PureComponent","_class","Object","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","apply","arguments","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","key","value","_this$props","props","classes","_this$props2","defaults","localStateQuery","localStateMutation","result","tabs","containers","map","e","push","_material_ui_core_Tab__WEBPACK_IMPORTED_MODULE_7___default","label","tab","direction","container","_components_Mutation__WEBPACK_IMPORTED_MODULE_12__","mutation","lmutate","_components_Query__WEBPACK_IMPORTED_MODULE_13__","query","_ref2","data","enhancedTabs","keys","className","_material_ui_core_AppBar__WEBPACK_IMPORTED_MODULE_5___default","_material_ui_core_Tabs__WEBPACK_IMPORTED_MODULE_8___default","onChange","_","variables","indicatorColor","react_swipeable_views__WEBPACK_IMPORTED_MODULE_11___default","axis","index","onChangeIndex","React","PureComponent","siteColumnData","id","numeric","disablePadding","colSpan","siteExclude","Site","fab","position","bottom","right","lastEntryOn","padding","history","restProps","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_6___default","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_4___default","item","xs","_components_Mutation__WEBPACK_IMPORTED_MODULE_7__","SITE_TABLE","args","_components_Query__WEBPACK_IMPORTED_MODULE_8__","SITE_TABLE_QUERY","siteTable","DELETE_SITES","deleteSites","page","rowsPerPage","SITES","limit","skip","loading","refetch","_components_Enhanced_Table_Table__WEBPACK_IMPORTED_MODULE_16__","assign","sites","title","settings","count","length","columnData","exclude","options","onView","Routes","detail","onDelete","_onDelete","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","mark","_callee","delArgs","wrap","_context","prev","next","defaultState","stop","_x","onAdd","create","render","commanRender","match","renderValue","_ref3","rest","RENDER_VALUE","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","formatDate","mutate","_ref4","_callee2","largs","_context2","_x2","stockItemColumnData","stockItemExclude","STOCK_CREDIT","gql","_templateObject","quantity","type","default","note","current","StockPage","user","stockItemTable","react__WEBPACK_IMPORTED_MODULE_8___default","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_5___default","_components_Mutation__WEBPACK_IMPORTED_MODULE_11__","DELETE_STOCK_ITEMS","deleteStockItems","dloading","_components_TableWrapper__WEBPACK_IMPORTED_MODULE_12__","tableMutation","STOCK_ITEM_TABLE","tableQuery","STOCK_ITEM_TABLE_QUERY","dataQuery","STOCK_ITEMS","tableSettings","optionable","credit","onCredit","_components_Dialogs_FormDialog__WEBPACK_IMPORTED_MODULE_9__","positiveHandler","m","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","stockId","supplierId","_onCredit","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","fn","Stock","_components_Enhanced_Table_Table__WEBPACK_IMPORTED_MODULE_10__","stocks","edges","totalCount","_x3","stockTransactionColumnData","style","paddingLeft","paddingRight","stockTransactionExclude","TransactionPage","stockTransactionTable","_components_TableWrapper__WEBPACK_IMPORTED_MODULE_8__","STOCK_TRANSACTION_TABLE","STOCK_TRANSACTION_TABLE_QUERY","STOCK_TRANSACTIONS","getQueryVariables","transactions","_components_Enhanced_Table_Table__WEBPACK_IMPORTED_MODULE_7__","alt","altValue","altColor","getContactJSX","String","User","objectSpread","mixins","gutters","paddingTop","paddingBottom","react_default","Query","USER","error","Paper_default","Grid_default","sm","Typography_default","variant","username","toCurrency","siteCount","totalReceivedAmount","balance","undefined","spent","ManagerDashboardPage","objectWithoutProperties","components_User","TableWrapper","Table","selectable","asyncToGenerator","regenerator_default","QUERY","ManagerDashboard","me","pages_ManagerDashboardPage","stockPermission","Transaction","Tabs","ENHANCED_TABS","ENHANCED_TABS_QUERY"],"mappings":"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","file":"static/js/6.f4a4610b.chunk.js","sourcesContent":["import AppBar from '@material-ui/core/AppBar'\nimport {\n  createStyles,\n  Theme,\n  withStyles,\n  WithStyles,\n} from '@material-ui/core/styles'\nimport Tab from '@material-ui/core/Tab'\nimport Tabs from '@material-ui/core/Tabs'\nimport Typography from '@material-ui/core/Typography'\nimport React from 'react'\nimport SwipeableViews from 'react-swipeable-views'\nimport Mutation from '../components/Mutation'\nimport Query from '../components/Query'\n\nfunction TabContainer({ children, dir }: any) {\n  return (\n    <Typography component='div' dir={dir}>\n      {children}\n    </Typography>\n  )\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      width: '100%',\n    },\n    app: {\n      marginTop: theme.spacing.unit * 8,\n    },\n    content: {\n      marginTop: theme.spacing.unit * 5,\n    },\n    selected: {\n      backgroundColor: theme.palette.secondary.light,\n      color: theme.palette.secondary.contrastText,\n    },\n  })\n\ninterface IEnhancedTabsProps extends WithStyles<typeof styles, true> {\n  defaults: any[]\n  localStateQuery: any\n  localStateMutation: any\n}\n\nconst EnhancedTabs = withStyles(styles, { withTheme: true })(\n  class extends React.PureComponent<IEnhancedTabsProps> {\n    render() {\n      const { classes, theme } = this.props\n      const { defaults, localStateQuery, localStateMutation } = this.props\n      const result: { tabs: any[]; containers: any[] } = {\n        tabs: [],\n        containers: [],\n      }\n      defaults.map((e: any) => {\n        result.tabs.push(\n          <Tab\n            label={e.tab}\n            key={e.tab}\n            classes={{ selected: classes.selected }}\n          />,\n        )\n        result.containers.push(\n          <TabContainer dir={theme.direction} key={e.tab + '_container'}>\n            {e.container}\n          </TabContainer>,\n        )\n        return null\n      })\n\n      return (\n        <Mutation mutation={localStateMutation}>\n          {(lmutate: Function) => {\n            return (\n              <Query query={localStateQuery}>\n                {({ data }: any) => {\n                  const enhancedTabs = data[Object.keys(data)[0]]\n                  return (\n                    <div className={classes.root}>\n                      <AppBar color='default' className={classes.app}>\n                        <Tabs\n                          value={enhancedTabs.value}\n                          onChange={(_, value) =>\n                            lmutate({ variables: { value } })\n                          }\n                          indicatorColor='secondary'\n                        >\n                          {result.tabs}\n                        </Tabs>\n                      </AppBar>\n                      <SwipeableViews\n                        className={classes.content}\n                        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                        index={enhancedTabs.value}\n                        onChangeIndex={value =>\n                          lmutate({ variables: { value } })\n                        }\n                      >\n                        {result.containers}\n                      </SwipeableViews>\n                    </div>\n                  )\n                }}\n              </Query>\n            )\n          }}\n        </Mutation>\n      )\n    }\n  },\n)\nexport default EnhancedTabs\n","import Grid from '@material-ui/core/Grid'\nimport {\n  createStyles,\n  Theme,\n  withStyles,\n  WithStyles,\n} from '@material-ui/core/styles'\nimport React from 'react'\nimport Mutation from '../components/Mutation'\nimport Query from '../components/Query'\nimport { defaultState } from '../graphql/resolvers'\nimport { Routes } from '../Router'\nimport formatDate from '../utils/date'\n\nimport { SITE_TABLE as SITE_TABLE_QUERY } from '../graphql/query/local'\nimport { SITES } from '../graphql/query/remote'\n\nimport { SITE_TABLE } from '../graphql/mutation/local'\nimport { DELETE_SITES } from '../graphql/mutation/remote'\n\nimport EnhancedTable from '../components/Enhanced/Table/Table'\nimport commanRender, { RENDER_VALUE } from '../utils/commanRender'\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n    },\n    fab: {\n      position: 'fixed',\n      width: '4rem',\n      bottom: theme.spacing.unit * 2,\n      right: theme.spacing.unit * 2,\n    },\n    lastEntryOn: {\n      padding: '0 !important',\n    },\n  })\n\nexport const siteColumnData = [\n  {\n    id: 'createdAt',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Created At',\n  },\n  {\n    id: 'name',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Name',\n  },\n  {\n    id: 'location',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Location',\n  },\n  {\n    id: 'entryCount',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Total Entries',\n  },\n  {\n    id: 'lastEntryDate',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Last Entry On',\n  },\n  {\n    id: 'manager',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Manager',\n  },\n  {\n    id: 'managerSpentAmount',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Manager Spent Amount (₹)',\n  },\n  {\n    id: 'Total Cost',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Total Cost (₹)',\n  },\n]\nexport const siteExclude = [\n  'id',\n  'count',\n  'total',\n  'createdAt',\n  'updatedAt',\n  '__typename',\n]\n\ninterface ISiteProps extends WithStyles<typeof styles> {\n  history?: any\n}\n\nconst Site = withStyles(styles)((props: ISiteProps) => {\n  const { classes, history, ...restProps } = props\n  return (\n    <div>\n      <Grid container={true} className={classes.root}>\n        <Grid item={true} xs={12}>\n          <Mutation mutation={SITE_TABLE}>\n            {(lmutate: Function, args: IGraphqlData) => {\n              return (\n                <Query query={SITE_TABLE_QUERY}>\n                  {({ data: { siteTable } }: IGraphqlData) => {\n                    return (\n                      <Mutation mutation={DELETE_SITES}>\n                        {(deleteSites: Function) => {\n                          const { page, rowsPerPage } = siteTable\n                          return (\n                            <Query\n                              query={SITES}\n                              variables={{\n                                limit: rowsPerPage,\n                                skip: page * rowsPerPage,\n                              }}\n                            >\n                              {({ loading, data, refetch }: IGraphqlData) => {\n                                // refetch();\n                                return (\n                                  <EnhancedTable\n                                    {...restProps}\n                                    loading={loading}\n                                    data={data.sites}\n                                    title='Sites'\n                                    settings={siteTable}\n                                    count={\n                                      (data.sites.length &&\n                                        data.sites[0].count) ||\n                                      data.sites.length\n                                    }\n                                    columnData={siteColumnData}\n                                    exclude={siteExclude}\n                                    options={{\n                                      onView: (e: any) =>\n                                        history.push(\n                                          Routes.Site.detail({ id: e }),\n                                        ),\n                                      // onEdit: (e: any) => history.push(Routes.Site.update({ id: e, edit: true })),\n                                      onDelete: async (delArgs: any) => {\n                                        await deleteSites({\n                                          variables: delArgs,\n                                        })\n                                        await lmutate({\n                                          variables: defaultState.siteTable,\n                                        })\n                                        refetch()\n                                      },\n                                      onAdd: () =>\n                                        history.push(Routes.Site.create()),\n                                    }}\n                                    render={commanRender({\n                                      match: 'managerSpentAmount',\n                                      classes: (key: string) =>\n                                        key === 'lastEntryDate'\n                                          ? classes.lastEntryOn\n                                          : '',\n                                      renderValue: ({\n                                        key,\n                                        value,\n                                        ...rest\n                                      }: any) => {\n                                        if (key === 'lastEntryDate') {\n                                          return RENDER_VALUE({\n                                            key,\n                                            value: formatDate(value),\n                                            ...rest,\n                                          })\n                                        }\n                                        return RENDER_VALUE({\n                                          key,\n                                          value,\n                                          ...rest,\n                                        })\n                                      },\n                                    })}\n                                    mutate={async largs => {\n                                      await lmutate({ variables: largs })\n                                      // refetch();\n                                    }}\n                                  />\n                                )\n                              }}\n                            </Query>\n                          )\n                        }}\n                      </Mutation>\n                    )\n                  }}\n                </Query>\n              )\n            }}\n          </Mutation>\n        </Grid>\n      </Grid>\n    </div>\n  )\n})\n\nexport default Site\n","import Grid from '@material-ui/core/Grid'\nimport {\n  createStyles,\n  Theme,\n  withStyles,\n  WithStyles,\n} from '@material-ui/core/styles'\nimport gql from 'graphql-tag'\nimport React from 'react'\nimport FormDialog from '../../components/Dialogs/FormDialog'\nimport EnhancedTable from '../../components/Enhanced/Table/Table'\nimport Mutation from '../../components/Mutation'\nimport TableWrapper from '../../components/TableWrapper'\nimport { STOCK_ITEM_TABLE } from '../../graphql/mutation/local'\nimport { DELETE_STOCK_ITEMS } from '../../graphql/mutation/remote'\nimport { STOCK_ITEM_TABLE as STOCK_ITEM_TABLE_QUERY } from '../../graphql/query/local'\nimport { STOCK_ITEMS } from '../../graphql/query/remote'\nimport { defaultState } from '../../graphql/resolvers'\nimport { Routes } from '../../Router'\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n    },\n    fab: {\n      position: 'fixed',\n      width: '4rem',\n      bottom: theme.spacing.unit * 2,\n      right: theme.spacing.unit * 2,\n    },\n  })\n\nexport const stockItemColumnData = [\n  {\n    id: 'createdAt',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Created At',\n  },\n  {\n    id: 'name',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Name',\n  },\n  {\n    id: 'unit',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Unit',\n  },\n  {\n    id: 'available',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Available',\n  },\n]\n\nexport const stockItemExclude = ['id', 'createdAt', 'updatedAt', '__typename']\n\ninterface IStockItem extends WithStyles<typeof styles> {\n  history?: any\n  optionable?: boolean\n}\n\nconst STOCK_CREDIT = gql`\n  mutation createTransaction($data: TransactionCreateInput!) {\n    createTransaction(data: $data) {\n      id\n      createdAt\n      stock {\n        name\n      }\n      supplier {\n        username\n      }\n    }\n  }\n`\nconst defaults: IFormGenerator = {\n  quantity: {\n    type: 'number',\n    default: 0,\n    // startAdornment: <InputAdornment position='start'>₹</InputAdornment>,\n  },\n  note: {\n    type: 'text',\n    default: '',\n  },\n  type: {\n    type: 'select',\n    default: [\n      { key: 'CREDIT [+]', value: 'CREDIT' },\n      { key: 'DEBIT [-]', value: 'DEBIT' },\n    ],\n    current: 'CREDIT',\n  },\n}\nexport const StockPage = withStyles(styles)(\n  (props: IStockItem & { user?: any }) => {\n    const { classes, history, user, ...restProps } = props\n    const { stockItemTable } = defaultState\n    return (\n      <div>\n        <Grid container={true} className={classes.root}>\n          <Grid item={true} xs={12}>\n            <Mutation mutation={DELETE_STOCK_ITEMS}>\n              {(\n                deleteStockItems: Function,\n                { loading: dloading }: IGraphqlData,\n              ) => {\n                return (\n                  <TableWrapper\n                    tableMutation={STOCK_ITEM_TABLE}\n                    tableQuery={STOCK_ITEM_TABLE_QUERY}\n                    dataQuery={STOCK_ITEMS}\n                    defaultState={stockItemTable}\n                  >\n                    {(\n                      tableSettings: typeof stockItemTable,\n                      lmutate: Function,\n                      { loading, data, refetch }: IGraphqlData,\n                    ) => {\n                      const options = props.optionable && {\n                        credit: ({\n                          selected,\n                          onCredit,\n                        }: {\n                          selected: string\n                          onCredit: any\n                        }) => (\n                          <FormDialog\n                            mutation={STOCK_CREDIT}\n                            defaults={defaults}\n                            positiveHandler={(m: any, e: any) =>\n                              onCredit &&\n                              onCredit(m, {\n                                data: {\n                                  ...e,\n                                  stockId: selected,\n                                  supplierId: user.id,\n                                },\n                              })\n                            }\n                          />\n                        ),\n                        options: {\n                          onCredit: async (fn: Function, args: any) => {\n                            await fn({ variables: args })\n                            // refetch();\n                          },\n                          onView: (e: any) =>\n                            history.push(Routes.Stock.detail({ id: e })),\n                        },\n                      }\n                      return (\n                        <EnhancedTable\n                          {...restProps}\n                          loading={loading || dloading}\n                          data={data.stocks.edges}\n                          title='Stock Items'\n                          settings={tableSettings}\n                          count={data.stocks.totalCount}\n                          columnData={stockItemColumnData}\n                          exclude={stockItemExclude}\n                          {...options}\n                          mutate={async (args: any) => {\n                            await lmutate({ variables: args })\n                            // refetch();\n                          }}\n                        />\n                      )\n                    }}\n                  </TableWrapper>\n                )\n              }}\n            </Mutation>\n          </Grid>\n        </Grid>\n      </div>\n    )\n  },\n)\n","import Grid from '@material-ui/core/Grid'\nimport {\n  createStyles,\n  Theme,\n  withStyles,\n  WithStyles,\n} from '@material-ui/core/styles'\nimport React from 'react'\nimport EnhancedTable from '../../components/Enhanced/Table/Table'\nimport TableWrapper from '../../components/TableWrapper'\nimport { STOCK_TRANSACTION_TABLE } from '../../graphql/mutation/local'\nimport { STOCK_TRANSACTION_TABLE as STOCK_TRANSACTION_TABLE_QUERY } from '../../graphql/query/local'\nimport { STOCK_TRANSACTIONS } from '../../graphql/query/remote'\nimport { defaultState } from '../../graphql/resolvers'\nimport commanRender, { RENDER_VALUE } from '../../utils/commanRender'\nimport getContactJSX from '../../utils/getContactJSX'\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n    },\n    fab: {\n      position: 'fixed',\n      width: '4rem',\n      bottom: theme.spacing.unit * 2,\n      right: theme.spacing.unit * 2,\n    },\n  })\n\nexport const stockTransactionColumnData = [\n  {\n    id: 'createdAt',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Created At',\n  },\n  {\n    id: 'stock',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Stock Name',\n  },\n  {\n    id: 'quantity',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Quantity',\n  },\n  {\n    id: 'type',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Transaction Type',\n  },\n  {\n    id: 'available',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Available',\n  },\n  {\n    id: 'supplier',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Supplier/Consumer',\n  },\n  {\n    id: 'note',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: (\n      <span style={{ paddingLeft: '4rem', paddingRight: '4rem' }}>Note</span>\n    ),\n  },\n]\n\nexport const stockTransactionExclude = [\n  'id',\n  'createdAt',\n  'updatedAt',\n  '__typename',\n]\n\ninterface IStockItem extends WithStyles<typeof styles> {\n  history?: any\n  query?: any\n  getQueryVariables?: any\n}\n\nexport const TransactionPage = withStyles(styles)((props: IStockItem) => {\n  const { classes, history, ...restProps } = props\n  const { stockTransactionTable } = defaultState\n  return (\n    <div>\n      <Grid container={true} className={classes.root}>\n        <Grid item={true} xs={12}>\n          <TableWrapper\n            tableMutation={STOCK_TRANSACTION_TABLE}\n            tableQuery={STOCK_TRANSACTION_TABLE_QUERY}\n            dataQuery={restProps.query || STOCK_TRANSACTIONS}\n            getQueryVariables={restProps.getQueryVariables}\n            defaultState={stockTransactionTable}\n          >\n            {(\n              tableSettings: typeof stockTransactionTable,\n              lmutate: Function,\n              { loading, data, refetch }: IGraphqlData,\n            ) => {\n              const transactions = data[Object.keys(data)[0]]\n              return (\n                <EnhancedTable\n                  {...restProps}\n                  loading={loading}\n                  data={transactions.edges}\n                  title='Stock Transactions'\n                  settings={tableSettings}\n                  count={transactions.totalCount}\n                  columnData={stockTransactionColumnData}\n                  exclude={stockTransactionExclude}\n                  render={commanRender({\n                    match: 'type',\n                    alt: true,\n                    altValue: 'DEBIT',\n                    altColor: '#eee',\n                    renderValue: ({ key, value }: any) => {\n                      if (key === 'contact') {\n                        return { value: getContactJSX(value) }\n                      }\n                      const result = RENDER_VALUE({\n                        key,\n                        value,\n                        skip: ['contact'],\n                      })\n                      return {\n                        ...result,\n                        value: String(value).length ? result.value : '-',\n                      }\n                    },\n                  })}\n                  mutate={async args => {\n                    await lmutate({ variables: args })\n                    // refetch();\n                  }}\n                />\n              )\n            }}\n          </TableWrapper>\n        </Grid>\n      </Grid>\n    </div>\n  )\n})\n","import Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport { createStyles, withStyles, WithStyles } from '@material-ui/core/styles'\nimport { Theme } from '@material-ui/core/styles/createMuiTheme'\nimport Typography from '@material-ui/core/Typography'\nimport React from 'react'\nimport { USER } from '../graphql/query/remote'\nimport { RENDER_VALUE } from '../utils/commanRender'\nimport toCurrency from '../utils/toCurrency'\nimport Query from './Query'\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    paper: {\n      ...theme.mixins.gutters(),\n      paddingTop: theme.spacing.unit * 2,\n      paddingBottom: theme.spacing.unit * 2,\n    },\n  })\n\ninterface IUser extends WithStyles<typeof styles> {\n  user: any\n}\n\nconst User = withStyles(styles)((props: IUser) => {\n  const { classes, user } = props\n  return (\n    <Query query={USER} variables={{ id: user.id }}>\n      {({ loading, error, data: { user } }: IGraphqlData) => {\n        if (loading) {\n          return <span>loading...</span>\n        } else if (error) {\n          return <span>Error Occured!</span>\n        }\n        return (\n          <Paper className={classes.paper}>\n            <Grid container={true} spacing={32}>\n              <Grid item={true} container={true} direction='column' sm={6}>\n                <Grid item={true}>\n                  <Typography\n                    variant='headline'\n                    className='ttc'\n                    color='primary'\n                  >\n                    Username: {user.username}\n                  </Typography>\n                </Grid>\n                <Grid item={true}>\n                  <Typography\n                    variant='headline'\n                    className='ttc'\n                    color='secondary'\n                  >\n                    Total Sites: {toCurrency(user.siteCount)}\n                  </Typography>\n                </Grid>\n              </Grid>\n              <Grid item={true} container={true} direction='column' sm={6}>\n                <Grid item={true}>\n                  <Typography variant='subheading'>\n                    Total Received Amount (₹):{' '}\n                    <span\n                      style={{\n                        color:\n                          RENDER_VALUE({\n                            value: user.totalReceivedAmount,\n                            balance: false,\n                          }).color || undefined,\n                      }}\n                    >\n                      {RENDER_VALUE({ value: user.totalReceivedAmount }).value}\n                    </span>\n                  </Typography>\n                </Grid>\n                <Grid item={true}>\n                  <Typography variant='subheading'>\n                    Total Spent Amount (₹): {toCurrency(user.spent)}\n                  </Typography>\n                </Grid>\n                <Grid item={true}>\n                  <Typography variant='subheading'>\n                    Total Balance (₹):{' '}\n                    <span\n                      style={{\n                        color:\n                          RENDER_VALUE({ value: user.balance, balance: false })\n                            .color || undefined,\n                      }}\n                    >\n                      {RENDER_VALUE({ value: user.balance }).value}\n                    </span>\n                  </Typography>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Paper>\n        )\n      }}\n    </Query>\n  )\n})\n\nexport default User\n","import { createStyles, Theme, withStyles } from '@material-ui/core/styles'\nimport React from 'react'\nimport EnhancedTable from '../components/Enhanced/Table/Table'\nimport TableWrapper from '../components/TableWrapper'\nimport User from '../components/User'\nimport { SITE_TABLE } from '../graphql/mutation/local'\nimport { SITE_TABLE as SITE_TABLE_QUERY } from '../graphql/query/local'\nimport { SITES } from '../graphql/query/remote'\nimport { defaultState } from '../graphql/resolvers'\nimport { Routes } from '../Router'\nimport commanRender, { RENDER_VALUE } from '../utils/commanRender'\nimport formatDate from '../utils/date'\nimport { siteColumnData, siteExclude } from './Site'\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      // padding: '0',\n    },\n    paper: {\n      ...theme.mixins.gutters(),\n      paddingTop: theme.spacing.unit * 2,\n      paddingBottom: theme.spacing.unit * 2,\n    },\n    fab: {\n      position: 'fixed',\n      width: '8rem',\n      bottom: theme.spacing.unit * 2,\n      right: theme.spacing.unit * 2,\n    },\n    lastEntryOn: {\n      padding: '0 !important',\n    },\n  })\n\nconst ManagerDashboardPage = withStyles(styles)((props: any) => {\n  const { classes, history, ...restProps } = props\n  const { siteTable } = defaultState\n  // updateQuery(data);\n  return (\n    <div>\n      <User {...props} />\n      <TableWrapper\n        tableMutation={SITE_TABLE}\n        tableQuery={SITE_TABLE_QUERY}\n        dataQuery={SITES}\n        defaultState={siteTable}\n      >\n        {(\n          tableSettings: typeof siteTable,\n          lmutate: Function,\n          { loading, data, refetch }: IGraphqlData,\n        ) => {\n          return (\n            <EnhancedTable\n              {...restProps}\n              loading={loading}\n              data={data.sites}\n              title={'Sites'}\n              settings={tableSettings}\n              refetch={refetch}\n              count={\n                (data.sites.length && data.sites[0].count) || data.sites.length\n              }\n              columnData={siteColumnData}\n              exclude={siteExclude}\n              options={{\n                selectable: false,\n                onView: (e: any) => history.push(Routes.Site.detail({ id: e })),\n              }}\n              render={commanRender({\n                match: 'managerSpentAmount',\n                classes: (key: string) =>\n                  key === 'lastEntryDate' ? classes.lastEntryOn : '',\n                renderValue: ({ key, value, ...rest }: any) => {\n                  if (key === 'lastEntryDate') {\n                    return RENDER_VALUE({\n                      key,\n                      value: formatDate(value),\n                      ...rest,\n                    })\n                  }\n                  return RENDER_VALUE({ key, value, ...rest })\n                },\n              })}\n              mutate={async args => {\n                await lmutate({ variables: args })\n                // refetch();\n              }}\n            />\n          )\n        }}\n      </TableWrapper>\n    </div>\n  )\n})\n\nexport default ManagerDashboardPage\n","import gql from 'graphql-tag'\nimport React, { PureComponent } from 'react'\nimport Tabs from '../components/Tabs'\nimport { ENHANCED_TABS } from '../graphql/mutation/local'\nimport { ENHANCED_TABS as ENHANCED_TABS_QUERY } from '../graphql/query/local'\nimport ManagerDashboardPage from './ManagerDashboardPage'\nimport { StockPage } from './Stock/StockPage'\nimport { TransactionPage } from './Stock/Transaction'\n\nconst QUERY = gql`\n  query supplierTransactions($id: ID!, $limit: Int!, $skip: Int) {\n    supplierTransactions(id: $id, limit: $limit, skip: $skip) {\n      totalCount\n      edges {\n        id\n        stock {\n          name\n        }\n        quantity\n        type\n        available\n        supplier {\n          name: username\n        }\n        note\n        createdAt\n      }\n    }\n  }\n`\nclass ManagerDashboard extends PureComponent {\n  render() {\n    const { me } = this.props as any\n    const defaults = [\n      {\n        tab: 'Site',\n        container: <ManagerDashboardPage {...this.props} />,\n      },\n      {\n        tab: 'Stock',\n        container: (\n          <StockPage {...this.props} optionable={me.stockPermission} />\n        ),\n      },\n      {\n        tab: 'Transaction',\n        container: (\n          <TransactionPage\n            {...this.props}\n            query={QUERY}\n            getQueryVariables={() => ({\n              id: me.id,\n            })}\n          />\n        ),\n      },\n    ]\n    return (\n      <Tabs\n        defaults={defaults}\n        localStateMutation={ENHANCED_TABS}\n        localStateQuery={ENHANCED_TABS_QUERY}\n      />\n    )\n    // if (me && me.stockPermission) {\n    // }\n    // return <ManagerDashboardPage {...this.props} />\n  }\n}\n\nexport default ManagerDashboard\n"],"sourceRoot":""}