{"version":3,"sources":["components/forms/Form.tsx","components/forms/Site.tsx"],"names":["Form","defaults","data","_this","this","result","Object","keys","forEach","e","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","type","default","getDate","Array","current","mapping","value","Boolean","Error","mergeData","_this2","_this$props$match$par","props","match","params","_this$props$match$par2","edit","restParams","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_this$props","query","_this$props$getQueryV","getQueryVariables","_ref","id","prevDefaults","skipOnUpdate","clientOnly","filter","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","_Query__WEBPACK_IMPORTED_MODULE_10__","variables","fetchPolicy","_ref2","loading","error","newDefaults","assign","children","Function","update","queryResult","PureComponent","CreateSite","react__WEBPACK_IMPORTED_MODULE_5___default","_Query__WEBPACK_IMPORTED_MODULE_9__","USERS_USERNAME","name","required","location","manager","users","key","validate","val","createdAt","_Form__WEBPACK_IMPORTED_MODULE_10__","SITE","_FormGenerator__WEBPACK_IMPORTED_MODULE_11__","mutation","UPDATE_SITE","CREATE_SITE","title","submitText","mutateFunc","fn"],"mappings":"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","file":"static/js/10.77003f2c.chunk.js","sourcesContent":["import React, { PureComponent } from 'react'\nimport { getDate } from '../../utils/date'\nimport filter from '../../utils/filter'\nimport Query from '../Query'\n\ninterface IFormProps {\n  match?: any\n  query: string\n  defaults: any\n  skipOnUpdate?: string[]\n  clientOnly?: string[]\n}\n\nexport interface IProps {\n  match: any\n}\nclass Form extends PureComponent<IFormProps> {\n  mergeData(defaults: any, data: any) {\n    const result: any = {}\n    Object.keys(defaults).forEach(e => {\n      result[e] = { ...defaults[e] }\n      if (defaults[e].type === 'date') {\n        result[e].default = getDate(data[e])\n      } else if (defaults[e].default instanceof Array) {\n        result[e].current =\n          data[e] &&\n          (data[e][result[e].mapping && result[e].mapping.value] || data[e])\n      } else if (\n        typeof defaults[e].default === 'string' ||\n        typeof defaults[e].default === 'number'\n      ) {\n        result[e].default = data[e]\n      } else if (defaults[e].type === Boolean) {\n        result[e].default = data[e]\n      } else if (defaults[e].type === 'custom') {\n        // result[e].default = data[e]\n      } else if (defaults[e].default instanceof Object) {\n        result[e].default = { ...this.mergeData(defaults[e].default, data[e]) }\n      } else {\n        throw new Error('merge error')\n      }\n    })\n    return result\n  }\n  render() {\n    const { edit = false, ...restParams }: any = this.props.match.params\n    const {\n      query,\n      getQueryVariables = ({ id }: { id: string }) => ({ id }),\n      defaults: prevDefaults,\n      skipOnUpdate,\n      clientOnly,\n    }: any = this.props\n    let defaults = prevDefaults\n    if (edit === 'edit') {\n      defaults = filter(prevDefaults, skipOnUpdate)\n      return (\n        <Query\n          query={query}\n          variables={getQueryVariables(restParams)}\n          fetchPolicy='cache-and-network'\n        >\n          {({ loading, error, data }: IGraphqlData) => {\n            if (loading) {\n              return <span>loading...</span>\n            } else if (error) {\n              return <span>Error Occured!</span>\n            }\n            let newDefaults = this.mergeData(\n              filter(defaults, clientOnly),\n              data[Object.keys(data)[0]],\n            )\n            newDefaults = Object.assign(defaults, newDefaults)\n            return (\n              this.props.children instanceof Function &&\n              this.props.children({\n                update: true,\n                defaults: newDefaults,\n                queryResult: data,\n              })\n            )\n          }}\n        </Query>\n      )\n    }\n    // else {\n    //   defaults = filter(defaults, clientOnly)\n    // }\n    return (\n      this.props.children instanceof Function &&\n      this.props.children({ update: false, defaults, queryResult: null })\n    )\n  }\n}\n\nexport default Form\n","import React, { PureComponent } from 'react'\nimport { CREATE_SITE, UPDATE_SITE } from '../../graphql/mutation/remote'\nimport { SITE } from '../../graphql/query/remote'\nimport { USERS_USERNAME } from '../../graphql/query/remote'\nimport { getDate } from '../../utils/date'\nimport Query from '../Query'\nimport Form, { IProps } from './Form'\nimport FormGenerator from './FormGenerator'\n\nclass CreateSite extends PureComponent<IProps> {\n  render() {\n    return (\n      <Query query={USERS_USERNAME}>\n        {({ loading, error, data }: IGraphqlData) => {\n          if (loading) {\n            return <span>loading...</span>\n          } else if (error) {\n            return <span>Error Occured!</span>\n          }\n          const defaults = {\n            name: {\n              type: 'text',\n              default: '',\n              required: true,\n            },\n            location: {\n              type: 'text',\n              default: '',\n              required: true,\n            },\n            manager: {\n              type: 'select',\n              default: data.users,\n              current: null,\n              required: true,\n              mapping: { key: 'username', value: 'id' },\n              validate: (val: string) => {\n                return !Boolean(val) ? 'No manager selected' : null\n              },\n            },\n            createdAt: {\n              type: 'date',\n              default: getDate(),\n              required: true,\n            },\n          }\n          const { id } = this.props.match.params\n          return (\n            <Form\n              {...this.props}\n              query={SITE}\n              defaults={defaults}\n              skipOnUpdate={['manager', 'createdAt']}\n            >\n              {({ update, defaults, queryResult }: IFormProps) => {\n                return (\n                  <FormGenerator\n                    {...this.props}\n                    defaults={defaults}\n                    mutation={update ? UPDATE_SITE : CREATE_SITE}\n                    title={!update ? 'Create a new site' : 'Update this site'}\n                    submitText={!update ? 'Create site' : 'Update site'}\n                    mutateFunc={(fn, data) => fn({ variables: { id, data } })}\n                  />\n                )\n              }}\n            </Form>\n          )\n          // return (\n          //     <FormGenerator defaults={defaults} submitText=\"Create Site\" mutation={CREATE_SITE} title=\"Create a new Site\" {...this.props}></FormGenerator>\n          // );\n        }}\n      </Query>\n    )\n  }\n}\n\nexport default CreateSite\n"],"sourceRoot":""}