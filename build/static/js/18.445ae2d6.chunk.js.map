{"version":3,"sources":["pages/Stock/StockItemDetail.tsx"],"names":["columnData","id","numeric","disablePadding","colSpan","label","exclude","StockItemDetail","withStyles","theme","createStyles","paper","Object","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","mixins","gutters","paddingTop","spacing","unit","paddingBottom","marginTop","marginBottom","fab","position","bottom","right","props","match","params","classes","stockItemTransactionTable","defaultState","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","Fragment","_components_Query__WEBPACK_IMPORTED_MODULE_9__","query","STOCK_ITEM","variables","_ref","stock","data","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_4___default","className","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_3___default","container","item","direction","sm","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_6___default","variant","color","name","toCurrency","available","_components_TableWrapper__WEBPACK_IMPORTED_MODULE_10__","tableMutation","STOCK_ITEM_TRANSACTION_TABLE","tableQuery","STOCK_ITEM_TRANSACTION_TABLE_QUERY","dataQuery","STOCK_ITEM_TRANSACTIONS","getQueryVariables","tableSettings","lmutate","_ref2","loading","stockItemTransactions","refetch","keys","transactions","_components_Enhanced_Table_Table__WEBPACK_IMPORTED_MODULE_8__","edges","count","totalCount","settings","title","render","commanRender","alt","altValue","altColor","renderValue","_ref3","key","value","getContactJSX","result","RENDER_VALUE","skip","String","length","mutate","_ref4","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","_callee","args","wrap","_context","prev","next","stop","_x","apply","this","arguments"],"mappings":"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","file":"static/js/18.445ae2d6.chunk.js","sourcesContent":["import Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport {\n  createStyles,\n  Theme,\n  withStyles,\n  WithStyles,\n} from '@material-ui/core/styles'\n// import AddIcon from '@material-ui/icons/Add';\nimport Typography from '@material-ui/core/Typography'\nimport React from 'react'\nimport EnhancedTable from '../../components/Enhanced/Table/Table'\nimport Query from '../../components/Query'\nimport TableWrapper from '../../components/TableWrapper'\nimport { STOCK_ITEM_TRANSACTION_TABLE } from '../../graphql/mutation/local'\nimport { STOCK_ITEM_TRANSACTION_TABLE as STOCK_ITEM_TRANSACTION_TABLE_QUERY } from '../../graphql/query/local'\nimport { STOCK_ITEM, STOCK_ITEM_TRANSACTIONS } from '../../graphql/query/remote'\nimport { defaultState } from '../../graphql/resolvers'\nimport commanRender, { RENDER_VALUE } from '../../utils/commanRender'\nimport getContactJSX from '../../utils/getContactJSX'\nimport toCurrency from '../../utils/toCurrency'\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    paper: {\n      ...theme.mixins.gutters(),\n      paddingTop: theme.spacing.unit * 2,\n      paddingBottom: theme.spacing.unit * 2,\n      marginTop: theme.spacing.unit * 2,\n      marginBottom: theme.spacing.unit * 2,\n    },\n    fab: {\n      position: 'fixed',\n      bottom: theme.spacing.unit * 2,\n      right: theme.spacing.unit * 2,\n    },\n  })\n\nconst columnData = [\n  {\n    id: 'createdAt',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Created At',\n  },\n  {\n    id: 'quantity',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Quantity',\n  },\n  {\n    id: 'type',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Type',\n  },\n  {\n    id: 'available',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Available',\n  },\n  {\n    id: 'supplier',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Supplier/Consumer',\n  },\n  {\n    id: 'note',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Note',\n  },\n]\nconst exclude = ['id', 'count', 'createdAt', 'updatedAt', '__typename']\n\ninterface IStockItemDetailProps extends WithStyles<typeof styles> {\n  history?: any\n  match?: any\n  user: any\n}\n\nconst StockItemDetail = withStyles(styles)((props: IStockItemDetailProps) => {\n  const { id } = props.match.params\n  const { classes } = props\n  const { stockItemTransactionTable } = defaultState\n  return (\n    <React.Fragment>\n      <Query query={STOCK_ITEM} variables={{ id }}>\n        {({ data: { stock } }: IGraphqlData) => {\n          return (\n            <React.Fragment>\n              <Paper className={classes.paper}>\n                <Grid container={true} spacing={32}>\n                  <Grid item={true} container={true} direction='column' sm={4}>\n                    <Grid item={true}>\n                      <Typography\n                        variant='headline'\n                        className='ttc'\n                        color='primary'\n                      >\n                        Name: {stock.name}\n                      </Typography>\n                    </Grid>\n                    <Grid item={true}>\n                      <Typography variant='headline' color='secondary'>\n                        Unit of measurement: {stock.unit}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                  <Grid item={true} container={true} direction='column' sm={4}>\n                    <Grid item={true}>\n                      <Typography variant='subheading'>\n                        Available: {toCurrency(stock.available)} {stock.unit}\n                      </Typography>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </Paper>\n\n              <TableWrapper\n                tableMutation={STOCK_ITEM_TRANSACTION_TABLE}\n                tableQuery={STOCK_ITEM_TRANSACTION_TABLE_QUERY}\n                dataQuery={STOCK_ITEM_TRANSACTIONS}\n                getQueryVariables={() => ({ id })}\n                defaultState={stockItemTransactionTable}\n              >\n                {(\n                  tableSettings: typeof stockItemTransactionTable,\n                  lmutate: Function,\n                  { loading, data, refetch }: IGraphqlData,\n                ) => {\n                  const stock = data[Object.keys(data)[0]]\n                  const stockItemTransactions = stock.transactions\n                  return (\n                    <EnhancedTable\n                      loading={loading}\n                      data={stockItemTransactions.edges}\n                      count={stockItemTransactions.totalCount}\n                      settings={stockItemTransactionTable}\n                      title='Stock Item Transactions'\n                      columnData={columnData}\n                      exclude={exclude}\n                      // options={{\n                      //   onEdit: (user && user.role === \"1\") ? (async (args: any) => {\n                      //     history.push(Routes.StockTransaction.create({ stockItemId: id, edit: true, id: args }));\n                      //   }) : (undefined),\n                      //   onAdd: () => history.push(Routes.StockTransaction.create({ stockItemId: id, edit: false, id: undefined }))\n                      // }}\n                      render={commanRender({\n                        match: 'type',\n                        alt: true,\n                        altValue: 'DEBIT',\n                        altColor: '#eee',\n                        renderValue: ({ key, value }: any) => {\n                          if (key === 'contact') {\n                            return { value: getContactJSX(value) }\n                          }\n                          const result = RENDER_VALUE({\n                            key,\n                            value,\n                            skip: ['contact'],\n                          })\n                          return {\n                            ...result,\n                            value: String(value).length ? result.value : '-',\n                          }\n                        },\n                      })}\n                      mutate={async args => {\n                        await lmutate({ variables: args })\n                        // refetch();\n                      }}\n                    />\n                  )\n                }}\n              </TableWrapper>\n            </React.Fragment>\n          )\n        }}\n      </Query>\n    </React.Fragment>\n  )\n})\n\nexport default StockItemDetail\n"],"sourceRoot":""}