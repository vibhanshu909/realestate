{"version":3,"sources":["pages/Site.tsx","pages/Stock/StockPage.tsx","pages/Stock/Transaction.tsx","components/Tabs.tsx","components/User.tsx","pages/ManagerDashboardPage.tsx","pages/ManagerDashboard.tsx"],"names":["siteColumnData","id","numeric","disablePadding","colSpan","label","siteExclude","Site","withStyles","theme","createStyles","root","width","fab","position","bottom","spacing","unit","right","lastEntryOn","padding","props","classes","history","restProps","Object","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_4___default","container","className","item","xs","_components_Mutation__WEBPACK_IMPORTED_MODULE_7__","mutation","SITE_TABLE","lmutate","args","_components_Query__WEBPACK_IMPORTED_MODULE_8__","query","SITE_TABLE_QUERY","_ref","siteTable","data","DELETE_SITES","deleteSites","page","rowsPerPage","SITES","variables","limit","skip","_ref2","loading","refetch","_components_Enhanced_Table_Table__WEBPACK_IMPORTED_MODULE_16__","assign","sites","title","settings","count","length","columnData","exclude","options","onView","e","push","Routes","detail","onDelete","_onDelete","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_2__","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_1___default","mark","_callee","delArgs","wrap","_context","prev","next","defaultState","stop","this","_x","apply","arguments","onAdd","create","render","commanRender","match","key","renderValue","_ref3","value","rest","RENDER_VALUE","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","formatDate","mutate","_ref4","_callee2","largs","_context2","_x2","stockItemColumnData","stockItemExclude","STOCK_CREDIT","gql","_templateObject","defaults","quantity","type","default","note","current","StockPage","user","stockItemTable","react__WEBPACK_IMPORTED_MODULE_8___default","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_5___default","_components_Mutation__WEBPACK_IMPORTED_MODULE_11__","DELETE_STOCK_ITEMS","deleteStockItems","dloading","_components_TableWrapper__WEBPACK_IMPORTED_MODULE_12__","tableMutation","STOCK_ITEM_TABLE","tableQuery","STOCK_ITEM_TABLE_QUERY","dataQuery","STOCK_ITEMS","tableSettings","optionable","credit","selected","onCredit","_components_Dialogs_FormDialog__WEBPACK_IMPORTED_MODULE_9__","positiveHandler","m","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","stockId","supplierId","_onCredit","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","fn","Stock","_components_Enhanced_Table_Table__WEBPACK_IMPORTED_MODULE_10__","stocks","edges","totalCount","_x3","stockTransactionColumnData","style","paddingLeft","paddingRight","stockTransactionExclude","TransactionPage","stockTransactionTable","_components_TableWrapper__WEBPACK_IMPORTED_MODULE_8__","STOCK_TRANSACTION_TABLE","STOCK_TRANSACTION_TABLE_QUERY","STOCK_TRANSACTIONS","getQueryVariables","transactions","keys","_components_Enhanced_Table_Table__WEBPACK_IMPORTED_MODULE_7__","alt","altValue","altColor","getContactJSX","result","String","TabContainer","children","dir","react__WEBPACK_IMPORTED_MODULE_10___default","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_9___default","component","EnhancedTabs","backgroundColor","palette","background","paper","app","marginTop","content","secondary","light","color","contrastText","withTheme","_React$PureComponent","_class","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_1__","_this$props","_this$props2","localStateQuery","localStateMutation","tabs","containers","map","_material_ui_core_Tab__WEBPACK_IMPORTED_MODULE_7___default","tab","direction","_components_Mutation__WEBPACK_IMPORTED_MODULE_12__","_components_Query__WEBPACK_IMPORTED_MODULE_13__","enhancedTabs","_material_ui_core_AppBar__WEBPACK_IMPORTED_MODULE_5___default","_material_ui_core_Tabs__WEBPACK_IMPORTED_MODULE_8___default","onChange","_","indicatorColor","react_swipeable_views__WEBPACK_IMPORTED_MODULE_11___default","axis","index","onChangeIndex","React","PureComponent","User","objectSpread","mixins","gutters","paddingTop","paddingBottom","react_default","Query","USER","error","Paper_default","Grid_default","sm","Typography_default","variant","username","toCurrency","siteCount","totalReceivedAmount","balance","undefined","spent","ManagerDashboardPage","objectWithoutProperties","components_User","TableWrapper","Table","selectable","asyncToGenerator","regenerator_default","QUERY","ManagerDashboard","me","pages_ManagerDashboardPage","stockPermission","Transaction","Tabs","ENHANCED_TABS","ENHANCED_TABS_QUERY"],"mappings":"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","file":"static/js/15.5421e348.chunk.js","sourcesContent":["import Grid from '@material-ui/core/Grid'\nimport {\n  createStyles,\n  Theme,\n  withStyles,\n  WithStyles,\n} from '@material-ui/core/styles'\nimport React from 'react'\nimport Mutation from '../components/Mutation'\nimport Query from '../components/Query'\nimport { defaultState } from '../graphql/resolvers'\nimport { Routes } from '../Router'\nimport formatDate from '../utils/date'\n\nimport { SITE_TABLE as SITE_TABLE_QUERY } from '../graphql/query/local'\nimport { SITES } from '../graphql/query/remote'\n\nimport { SITE_TABLE } from '../graphql/mutation/local'\nimport { DELETE_SITES } from '../graphql/mutation/remote'\n\nimport EnhancedTable from '../components/Enhanced/Table/Table'\nimport commanRender, { RENDER_VALUE } from '../utils/commanRender'\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n    },\n    fab: {\n      position: 'fixed',\n      width: '4rem',\n      bottom: theme.spacing.unit * 2,\n      right: theme.spacing.unit * 2,\n    },\n    lastEntryOn: {\n      padding: '0 !important',\n    },\n  })\n\nexport const siteColumnData = [\n  {\n    id: 'createdAt',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Created At',\n  },\n  {\n    id: 'name',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Name',\n  },\n  {\n    id: 'location',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Location',\n  },\n  {\n    id: 'entryCount',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Total Entries',\n  },\n  {\n    id: 'lastEntryDate',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Last Entry On',\n  },\n  {\n    id: 'manager',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Manager',\n  },\n  {\n    id: 'managerSpentAmount',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Manager Spent Amount (₹)',\n  },\n  {\n    id: 'Total Cost',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Total Cost (₹)',\n  },\n]\nexport const siteExclude = [\n  'id',\n  'count',\n  'total',\n  'createdAt',\n  'updatedAt',\n  '__typename',\n]\n\ninterface ISiteProps extends WithStyles<typeof styles> {\n  history?: any\n}\n\nconst Site = withStyles(styles)((props: ISiteProps) => {\n  const { classes, history, ...restProps } = props\n  return (\n    <div>\n      <Grid container={true} className={classes.root}>\n        <Grid item={true} xs={12}>\n          <Mutation mutation={SITE_TABLE}>\n            {(lmutate: Function, args: IGraphqlData) => {\n              return (\n                <Query query={SITE_TABLE_QUERY}>\n                  {({ data: { siteTable } }: IGraphqlData) => {\n                    return (\n                      <Mutation mutation={DELETE_SITES}>\n                        {(deleteSites: Function) => {\n                          const { page, rowsPerPage } = siteTable\n                          return (\n                            <Query\n                              query={SITES}\n                              variables={{\n                                limit: rowsPerPage,\n                                skip: page * rowsPerPage,\n                              }}\n                            >\n                              {({ loading, data, refetch }: IGraphqlData) => {\n                                // refetch();\n                                return (\n                                  <EnhancedTable\n                                    {...restProps}\n                                    loading={loading}\n                                    data={data.sites}\n                                    title='Sites'\n                                    settings={siteTable}\n                                    count={\n                                      (data.sites.length &&\n                                        data.sites[0].count) ||\n                                      data.sites.length\n                                    }\n                                    columnData={siteColumnData}\n                                    exclude={siteExclude}\n                                    options={{\n                                      onView: (e: any) =>\n                                        history.push(\n                                          Routes.Site.detail({ id: e }),\n                                        ),\n                                      // onEdit: (e: any) => history.push(Routes.Site.update({ id: e, edit: true })),\n                                      onDelete: async (delArgs: any) => {\n                                        await deleteSites({\n                                          variables: delArgs,\n                                        })\n                                        await lmutate({\n                                          variables: defaultState.siteTable,\n                                        })\n                                        refetch()\n                                      },\n                                      onAdd: () =>\n                                        history.push(Routes.Site.create()),\n                                    }}\n                                    render={commanRender({\n                                      match: 'managerSpentAmount',\n                                      classes: (key: string) =>\n                                        key === 'lastEntryDate'\n                                          ? classes.lastEntryOn\n                                          : '',\n                                      renderValue: ({\n                                        key,\n                                        value,\n                                        ...rest\n                                      }: any) => {\n                                        if (key === 'lastEntryDate') {\n                                          return RENDER_VALUE({\n                                            key,\n                                            value: formatDate(value),\n                                            ...rest,\n                                          })\n                                        }\n                                        return RENDER_VALUE({\n                                          key,\n                                          value,\n                                          ...rest,\n                                        })\n                                      },\n                                    })}\n                                    mutate={async largs => {\n                                      await lmutate({ variables: largs })\n                                      // refetch();\n                                    }}\n                                  />\n                                )\n                              }}\n                            </Query>\n                          )\n                        }}\n                      </Mutation>\n                    )\n                  }}\n                </Query>\n              )\n            }}\n          </Mutation>\n        </Grid>\n      </Grid>\n    </div>\n  )\n})\n\nexport default Site\n","import Grid from '@material-ui/core/Grid'\nimport {\n  createStyles,\n  Theme,\n  withStyles,\n  WithStyles,\n} from '@material-ui/core/styles'\nimport gql from 'graphql-tag'\nimport React from 'react'\nimport FormDialog from '../../components/Dialogs/FormDialog'\nimport EnhancedTable from '../../components/Enhanced/Table/Table'\nimport Mutation from '../../components/Mutation'\nimport TableWrapper from '../../components/TableWrapper'\nimport { STOCK_ITEM_TABLE } from '../../graphql/mutation/local'\nimport { DELETE_STOCK_ITEMS } from '../../graphql/mutation/remote'\nimport { STOCK_ITEM_TABLE as STOCK_ITEM_TABLE_QUERY } from '../../graphql/query/local'\nimport { STOCK_ITEMS } from '../../graphql/query/remote'\nimport { defaultState } from '../../graphql/resolvers'\nimport { Routes } from '../../Router'\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n    },\n    fab: {\n      position: 'fixed',\n      width: '4rem',\n      bottom: theme.spacing.unit * 2,\n      right: theme.spacing.unit * 2,\n    },\n  })\n\nexport const stockItemColumnData = [\n  {\n    id: 'createdAt',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Created At',\n  },\n  {\n    id: 'name',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Name',\n  },\n  {\n    id: 'unit',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Unit',\n  },\n  {\n    id: 'available',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Available',\n  },\n]\n\nexport const stockItemExclude = ['id', 'createdAt', 'updatedAt', '__typename']\n\ninterface IStockItem extends WithStyles<typeof styles> {\n  history?: any\n  optionable?: boolean\n}\n\nconst STOCK_CREDIT = gql`\n  mutation createTransaction($data: TransactionCreateInput!) {\n    createTransaction(data: $data) {\n      id\n      createdAt\n      stock {\n        name\n      }\n      supplier {\n        username\n      }\n    }\n  }\n`\nconst defaults: IFormGenerator = {\n  quantity: {\n    type: 'number',\n    default: 0,\n    // startAdornment: <InputAdornment position='start'>₹</InputAdornment>,\n  },\n  note: {\n    type: 'text',\n    default: '',\n  },\n  type: {\n    type: 'select',\n    default: [\n      { key: 'CREDIT [+]', value: 'CREDIT' },\n      { key: 'DEBIT [-]', value: 'DEBIT' },\n    ],\n    current: 'CREDIT',\n  },\n}\nexport const StockPage = withStyles(styles)(\n  (props: IStockItem & { user?: any }) => {\n    const { classes, history, user, ...restProps } = props\n    const { stockItemTable } = defaultState\n    return (\n      <div>\n        <Grid container={true} className={classes.root}>\n          <Grid item={true} xs={12}>\n            <Mutation mutation={DELETE_STOCK_ITEMS}>\n              {(\n                deleteStockItems: Function,\n                { loading: dloading }: IGraphqlData,\n              ) => {\n                return (\n                  <TableWrapper\n                    tableMutation={STOCK_ITEM_TABLE}\n                    tableQuery={STOCK_ITEM_TABLE_QUERY}\n                    dataQuery={STOCK_ITEMS}\n                    defaultState={stockItemTable}\n                  >\n                    {(\n                      tableSettings: typeof stockItemTable,\n                      lmutate: Function,\n                      { loading, data, refetch }: IGraphqlData,\n                    ) => {\n                      const options = props.optionable && {\n                        credit: ({\n                          selected,\n                          onCredit,\n                        }: {\n                          selected: string\n                          onCredit: any\n                        }) => (\n                          <FormDialog\n                            mutation={STOCK_CREDIT}\n                            defaults={defaults}\n                            positiveHandler={(m: any, e: any) =>\n                              onCredit &&\n                              onCredit(m, {\n                                data: {\n                                  ...e,\n                                  stockId: selected,\n                                  supplierId: user.id,\n                                },\n                              })\n                            }\n                          />\n                        ),\n                        options: {\n                          onCredit: async (fn: Function, args: any) => {\n                            await fn({ variables: args })\n                            // refetch();\n                          },\n                          onView: (e: any) =>\n                            history.push(Routes.Stock.detail({ id: e })),\n                        },\n                      }\n                      return (\n                        <EnhancedTable\n                          {...restProps}\n                          loading={loading || dloading}\n                          data={data.stocks.edges}\n                          title='Stock Items'\n                          settings={tableSettings}\n                          count={data.stocks.totalCount}\n                          columnData={stockItemColumnData}\n                          exclude={stockItemExclude}\n                          {...options}\n                          mutate={async (args: any) => {\n                            await lmutate({ variables: args })\n                            // refetch();\n                          }}\n                        />\n                      )\n                    }}\n                  </TableWrapper>\n                )\n              }}\n            </Mutation>\n          </Grid>\n        </Grid>\n      </div>\n    )\n  },\n)\n","import Grid from '@material-ui/core/Grid'\nimport {\n  createStyles,\n  Theme,\n  withStyles,\n  WithStyles,\n} from '@material-ui/core/styles'\nimport React from 'react'\nimport EnhancedTable from '../../components/Enhanced/Table/Table'\nimport TableWrapper from '../../components/TableWrapper'\nimport { STOCK_TRANSACTION_TABLE } from '../../graphql/mutation/local'\nimport { STOCK_TRANSACTION_TABLE as STOCK_TRANSACTION_TABLE_QUERY } from '../../graphql/query/local'\nimport { STOCK_TRANSACTIONS } from '../../graphql/query/remote'\nimport { defaultState } from '../../graphql/resolvers'\nimport commanRender, { RENDER_VALUE } from '../../utils/commanRender'\nimport getContactJSX from '../../utils/getContactJSX'\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n    },\n    fab: {\n      position: 'fixed',\n      width: '4rem',\n      bottom: theme.spacing.unit * 2,\n      right: theme.spacing.unit * 2,\n    },\n  })\n\nexport const stockTransactionColumnData = [\n  {\n    id: 'createdAt',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Created At',\n  },\n  {\n    id: 'stock',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Stock Name',\n  },\n  {\n    id: 'quantity',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Quantity',\n  },\n  {\n    id: 'type',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Transaction Type',\n  },\n  {\n    id: 'available',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Available',\n  },\n  {\n    id: 'supplier',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: 'Supplier/Consumer',\n  },\n  {\n    id: 'note',\n    numeric: false,\n    disablePadding: false,\n    colSpan: 1,\n    label: (\n      <span style={{ paddingLeft: '4rem', paddingRight: '4rem' }}>Note</span>\n    ),\n  },\n]\n\nexport const stockTransactionExclude = [\n  'id',\n  'createdAt',\n  'updatedAt',\n  '__typename',\n]\n\ninterface IStockItem extends WithStyles<typeof styles> {\n  history?: any\n  query?: any\n  getQueryVariables?: any\n}\n\nexport const TransactionPage = withStyles(styles)((props: IStockItem) => {\n  const { classes, history, ...restProps } = props\n  const { stockTransactionTable } = defaultState\n  return (\n    <div>\n      <Grid container={true} className={classes.root}>\n        <Grid item={true} xs={12}>\n          <TableWrapper\n            tableMutation={STOCK_TRANSACTION_TABLE}\n            tableQuery={STOCK_TRANSACTION_TABLE_QUERY}\n            dataQuery={restProps.query || STOCK_TRANSACTIONS}\n            getQueryVariables={restProps.getQueryVariables}\n            defaultState={stockTransactionTable}\n          >\n            {(\n              tableSettings: typeof stockTransactionTable,\n              lmutate: Function,\n              { loading, data, refetch }: IGraphqlData,\n            ) => {\n              const transactions = data[Object.keys(data)[0]]\n              return (\n                <EnhancedTable\n                  {...restProps}\n                  loading={loading}\n                  data={transactions.edges}\n                  title='Stock Transactions'\n                  settings={tableSettings}\n                  count={transactions.totalCount}\n                  columnData={stockTransactionColumnData}\n                  exclude={stockTransactionExclude}\n                  render={commanRender({\n                    match: 'type',\n                    alt: true,\n                    altValue: 'DEBIT',\n                    altColor: '#eee',\n                    renderValue: ({ key, value }: any) => {\n                      if (key === 'contact') {\n                        return { value: getContactJSX(value) }\n                      }\n                      const result = RENDER_VALUE({\n                        key,\n                        value,\n                        skip: ['contact'],\n                      })\n                      return {\n                        ...result,\n                        value: String(value).length ? result.value : '-',\n                      }\n                    },\n                  })}\n                  mutate={async args => {\n                    await lmutate({ variables: args })\n                    // refetch();\n                  }}\n                />\n              )\n            }}\n          </TableWrapper>\n        </Grid>\n      </Grid>\n    </div>\n  )\n})\n","import AppBar from '@material-ui/core/AppBar'\nimport {\n  createStyles,\n  Theme,\n  withStyles,\n  WithStyles,\n} from '@material-ui/core/styles'\nimport Tab from '@material-ui/core/Tab'\nimport Tabs from '@material-ui/core/Tabs'\nimport Typography from '@material-ui/core/Typography'\nimport React from 'react'\nimport SwipeableViews from 'react-swipeable-views'\nimport Mutation from '../components/Mutation'\nimport Query from '../components/Query'\n\nfunction TabContainer({ children, dir }: any) {\n  return (\n    <Typography component='div' dir={dir}>\n      {children}\n    </Typography>\n  )\n}\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      backgroundColor: theme.palette.background.paper,\n      width: '100%',\n    },\n    app: {\n      marginTop: theme.spacing.unit * 8,\n    },\n    content: {\n      marginTop: theme.spacing.unit * 5,\n    },\n    selected: {\n      backgroundColor: theme.palette.secondary.light,\n      color: theme.palette.secondary.contrastText,\n    },\n  })\n\ninterface IEnhancedTabsProps extends WithStyles<typeof styles, true> {\n  defaults: any[]\n  localStateQuery: any\n  localStateMutation: any\n}\n\nconst EnhancedTabs = withStyles(styles, { withTheme: true })(\n  class extends React.PureComponent<IEnhancedTabsProps> {\n    render() {\n      const { classes, theme } = this.props\n      const { defaults, localStateQuery, localStateMutation } = this.props\n      const result: { tabs: any[]; containers: any[] } = {\n        tabs: [],\n        containers: [],\n      }\n      defaults.map((e: any) => {\n        result.tabs.push(\n          <Tab\n            label={e.tab}\n            key={e.tab}\n            classes={{ selected: classes.selected }}\n          />,\n        )\n        result.containers.push(\n          <TabContainer dir={theme.direction} key={e.tab + '_container'}>\n            {e.container}\n          </TabContainer>,\n        )\n        return null\n      })\n\n      return (\n        <Mutation mutation={localStateMutation}>\n          {(lmutate: Function) => {\n            return (\n              <Query query={localStateQuery}>\n                {({ data }: any) => {\n                  const enhancedTabs = data[Object.keys(data)[0]]\n                  return (\n                    <div className={classes.root}>\n                      <AppBar color='default' className={classes.app}>\n                        <Tabs\n                          value={enhancedTabs.value}\n                          onChange={(_, value) =>\n                            lmutate({ variables: { value } })\n                          }\n                          indicatorColor='secondary'\n                        >\n                          {result.tabs}\n                        </Tabs>\n                      </AppBar>\n                      <SwipeableViews\n                        className={classes.content}\n                        axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\n                        index={enhancedTabs.value}\n                        onChangeIndex={value =>\n                          lmutate({ variables: { value } })\n                        }\n                      >\n                        {result.containers}\n                      </SwipeableViews>\n                    </div>\n                  )\n                }}\n              </Query>\n            )\n          }}\n        </Mutation>\n      )\n    }\n  },\n)\nexport default EnhancedTabs\n","import Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport { createStyles, withStyles, WithStyles } from '@material-ui/core/styles'\nimport { Theme } from '@material-ui/core/styles/createMuiTheme'\nimport Typography from '@material-ui/core/Typography'\nimport React from 'react'\nimport { USER } from '../graphql/query/remote'\nimport { RENDER_VALUE } from '../utils/commanRender'\nimport toCurrency from '../utils/toCurrency'\nimport Query from './Query'\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    paper: {\n      ...theme.mixins.gutters(),\n      paddingTop: theme.spacing.unit * 2,\n      paddingBottom: theme.spacing.unit * 2,\n    },\n  })\n\ninterface IUser extends WithStyles<typeof styles> {\n  user: any\n}\n\nconst User = withStyles(styles)((props: IUser) => {\n  const { classes, user } = props\n  return (\n    <Query query={USER} variables={{ id: user.id }}>\n      {({ loading, error, data: { user } }: IGraphqlData) => {\n        if (loading) {\n          return <span>loading...</span>\n        } else if (error) {\n          return <span>Error Occured!</span>\n        }\n        return (\n          <Paper className={classes.paper}>\n            <Grid container={true} spacing={32}>\n              <Grid item={true} container={true} direction='column' sm={6}>\n                <Grid item={true}>\n                  <Typography\n                    variant='headline'\n                    className='ttc'\n                    color='primary'\n                  >\n                    Username: {user.username}\n                  </Typography>\n                </Grid>\n                <Grid item={true}>\n                  <Typography\n                    variant='headline'\n                    className='ttc'\n                    color='secondary'\n                  >\n                    Total Sites: {toCurrency(user.siteCount)}\n                  </Typography>\n                </Grid>\n              </Grid>\n              <Grid item={true} container={true} direction='column' sm={6}>\n                <Grid item={true}>\n                  <Typography variant='subheading'>\n                    Total Received Amount (₹):{' '}\n                    <span\n                      style={{\n                        color:\n                          RENDER_VALUE({\n                            value: user.totalReceivedAmount,\n                            balance: false,\n                          }).color || undefined,\n                      }}\n                    >\n                      {RENDER_VALUE({ value: user.totalReceivedAmount }).value}\n                    </span>\n                  </Typography>\n                </Grid>\n                <Grid item={true}>\n                  <Typography variant='subheading'>\n                    Total Spent Amount (₹): {toCurrency(user.spent)}\n                  </Typography>\n                </Grid>\n                <Grid item={true}>\n                  <Typography variant='subheading'>\n                    Total Balance (₹):{' '}\n                    <span\n                      style={{\n                        color:\n                          RENDER_VALUE({ value: user.balance, balance: false })\n                            .color || undefined,\n                      }}\n                    >\n                      {RENDER_VALUE({ value: user.balance }).value}\n                    </span>\n                  </Typography>\n                </Grid>\n              </Grid>\n            </Grid>\n          </Paper>\n        )\n      }}\n    </Query>\n  )\n})\n\nexport default User\n","import { createStyles, Theme, withStyles } from '@material-ui/core/styles'\nimport React from 'react'\nimport EnhancedTable from '../components/Enhanced/Table/Table'\nimport TableWrapper from '../components/TableWrapper'\nimport User from '../components/User'\nimport { SITE_TABLE } from '../graphql/mutation/local'\nimport { SITE_TABLE as SITE_TABLE_QUERY } from '../graphql/query/local'\nimport { SITES } from '../graphql/query/remote'\nimport { defaultState } from '../graphql/resolvers'\nimport { Routes } from '../Router'\nimport commanRender, { RENDER_VALUE } from '../utils/commanRender'\nimport formatDate from '../utils/date'\nimport { siteColumnData, siteExclude } from './Site'\n\nconst styles = (theme: Theme) =>\n  createStyles({\n    root: {\n      width: '100%',\n      // padding: '0',\n    },\n    paper: {\n      ...theme.mixins.gutters(),\n      paddingTop: theme.spacing.unit * 2,\n      paddingBottom: theme.spacing.unit * 2,\n    },\n    fab: {\n      position: 'fixed',\n      width: '8rem',\n      bottom: theme.spacing.unit * 2,\n      right: theme.spacing.unit * 2,\n    },\n    lastEntryOn: {\n      padding: '0 !important',\n    },\n  })\n\nconst ManagerDashboardPage = withStyles(styles)((props: any) => {\n  const { classes, history, ...restProps } = props\n  const { siteTable } = defaultState\n  // updateQuery(data);\n  return (\n    <div>\n      <User {...props} />\n      <TableWrapper\n        tableMutation={SITE_TABLE}\n        tableQuery={SITE_TABLE_QUERY}\n        dataQuery={SITES}\n        defaultState={siteTable}\n      >\n        {(\n          tableSettings: typeof siteTable,\n          lmutate: Function,\n          { loading, data, refetch }: IGraphqlData,\n        ) => {\n          return (\n            <EnhancedTable\n              {...restProps}\n              loading={loading}\n              data={data.sites}\n              title={'Sites'}\n              settings={siteTable}\n              refetch={refetch}\n              count={\n                (data.sites.length && data.sites[0].count) || data.sites.length\n              }\n              columnData={siteColumnData}\n              exclude={siteExclude}\n              options={{\n                selectable: false,\n                onView: (e: any) => history.push(Routes.Site.detail({ id: e })),\n              }}\n              render={commanRender({\n                match: 'managerSpentAmount',\n                classes: (key: string) =>\n                  key === 'lastEntryDate' ? classes.lastEntryOn : '',\n                renderValue: ({ key, value, ...rest }: any) => {\n                  if (key === 'lastEntryDate') {\n                    return RENDER_VALUE({\n                      key,\n                      value: formatDate(value),\n                      ...rest,\n                    })\n                  }\n                  return RENDER_VALUE({ key, value, ...rest })\n                },\n              })}\n              mutate={async args => {\n                await lmutate({ variables: args })\n                // refetch();\n              }}\n            />\n          )\n        }}\n      </TableWrapper>\n    </div>\n  )\n})\n\nexport default ManagerDashboardPage\n","import gql from 'graphql-tag'\nimport React, { PureComponent } from 'react'\nimport Tabs from '../components/Tabs'\nimport { ENHANCED_TABS } from '../graphql/mutation/local'\nimport { ENHANCED_TABS as ENHANCED_TABS_QUERY } from '../graphql/query/local'\nimport ManagerDashboardPage from './ManagerDashboardPage'\nimport { StockPage } from './Stock/StockPage'\nimport { TransactionPage } from './Stock/Transaction'\n\nconst QUERY = gql`\n  query supplierTransactions($id: ID!, $limit: Int!, $skip: Int) {\n    supplierTransactions(id: $id, limit: $limit, skip: $skip) {\n      totalCount\n      edges {\n        id\n        stock {\n          name\n        }\n        quantity\n        type\n        available\n        supplier {\n          name: username\n        }\n        note\n        createdAt\n      }\n    }\n  }\n`\nclass ManagerDashboard extends PureComponent {\n  render() {\n    const { me } = this.props as any\n    const defaults = [\n      {\n        tab: 'Site',\n        container: <ManagerDashboardPage {...this.props} />,\n      },\n      {\n        tab: 'Stock',\n        container: (\n          <StockPage {...this.props} optionable={me.stockPermission} />\n        ),\n      },\n      {\n        tab: 'Transaction',\n        container: (\n          <TransactionPage\n            {...this.props}\n            query={QUERY}\n            getQueryVariables={() => ({\n              id: me.id,\n            })}\n          />\n        ),\n      },\n    ]\n    return (\n      <Tabs\n        defaults={defaults}\n        localStateMutation={ENHANCED_TABS}\n        localStateQuery={ENHANCED_TABS_QUERY}\n      />\n    )\n    // if (me && me.stockPermission) {\n    // }\n    // return <ManagerDashboardPage {...this.props} />\n  }\n}\n\nexport default ManagerDashboard\n"],"sourceRoot":""}