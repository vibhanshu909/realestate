{"version":3,"sources":["utils/date.tsx","components/forms/Form.tsx","components/forms/CreateStockItem.tsx"],"names":["getDate","now","arguments","length","undefined","Date","y","getFullYear","m","getMonth","d","__webpack_require__","__webpack_exports__","args","toLocaleDateString","weekday","year","month","day","Form","defaults","data","_this","this","result","Object","keys","forEach","e","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_1__","type","default","Array","current","mapping","value","Boolean","Error","mergeData","_this2","_this$props$match$par","props","match","params","_this$props$match$par2","edit","restParams","_home_vibhanshu_Documents_RealEstate_frontend_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_this$props","query","_this$props$getQueryV","getQueryVariables","_ref","id","prevDefaults","skipOnUpdate","filter","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","_Query__WEBPACK_IMPORTED_MODULE_8__","variables","fetchPolicy","_ref2","loading","error","newDefaults","console","log","children","Function","update","queryResult","PureComponent","name","required","unit","initValue","label","CreateStockItem","react__WEBPACK_IMPORTED_MODULE_5___default","_Form__WEBPACK_IMPORTED_MODULE_6__","assign","STOCK_ITEM","_FormGenerator__WEBPACK_IMPORTED_MODULE_7__","mutation","UPDATE_STOCK_ITEM","CREATE_STOCK_ITEM","title","submitText","mutateFunc","fn"],"mappings":"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","file":"static/js/16.e529ef90.chunk.js","sourcesContent":["export default function(args: any) {\n    const options = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }\n    const lang = 'hi-IN'\n    return new Date(args).toLocaleDateString(lang, options)\n}\nexport function getDate(now = new Date()) {\n    now = new Date(now)\n    const y = now.getFullYear()\n    const m = now.getMonth() + 1\n    const d = now.getDate()\n    return y + '-' +\n        (m < 10 ? '0' + m : m) + '-' +\n        (d < 10 ? '0' + d : d)\n}\n","import React, { PureComponent } from 'react'\nimport Query from '../Query'\nimport filter from '../../utils/filter'\nimport { getDate } from '../../utils/date'\n\ninterface IFormProps {\n  match?: any,\n  query: string,\n  defaults: any,\n  skipOnUpdate?: string[]\n}\n\nexport interface IProps {\n  match: any\n}\nclass Form extends PureComponent<IFormProps> {\n  mergeData(defaults: any, data: any) {\n    const result: any = {}\n    Object.keys(defaults).forEach(e => {\n      result[e] = { ...defaults[e] }\n      if (defaults[e].type === 'date') {\n        result[e].default = getDate(data[e])\n      } else if (defaults[e].default instanceof Array) {\n        result[e].current = data[e] && (data[e][result[e].mapping && result[e].mapping.value] || data[e])\n      } else if (typeof (defaults[e].default) === 'string' || typeof (defaults[e].default) === 'number') {\n        result[e].default = data[e]\n      } else if (defaults[e].type === Boolean) {\n        result[e].default = data[e]\n      } else if (defaults[e].default instanceof Object) {\n        result[e].default = { ...this.mergeData(defaults[e].default, data[e]) }\n      } else {\n        throw new Error('merge error')\n      }\n    })\n    return result\n  }\n  render() {\n    const { edit = false, ...restParams }: any = this.props.match.params\n    const {\n      query,\n      getQueryVariables = ({ id }: { id: string }) => ({ id }),\n      defaults: prevDefaults,\n      skipOnUpdate,\n    }: any = this.props\n    let defaults = prevDefaults\n    if (edit === 'edit') {\n      defaults = filter(prevDefaults, skipOnUpdate)\n      return (\n        <Query query={query} variables={getQueryVariables(restParams)} fetchPolicy='cache-and-network'>\n          {({ loading, error, data }: IGraphqlData) => {\n            if (loading) {\n              return (<span>loading...</span>)\n            } else if (error) {\n              return (<span>Error Occured!</span>)\n            }\n            const newDefaults = this.mergeData(defaults, data[Object.keys(data)[0]])\n            console.log(newDefaults)\n            return (this.props.children instanceof Function) && this.props.children({ update: true, defaults: newDefaults, queryResult: data })\n          }}\n        </Query>\n      )\n    }\n    return (this.props.children instanceof Function) && this.props.children({ update: false, defaults, queryResult: null })\n  }\n}\n\nexport default Form\n","import React, { PureComponent } from 'react'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport Form, { IProps } from './Form'\nimport FormGenerator from './FormGenerator'\nimport { STOCK_ITEM } from '../../graphql/query/remote'\nimport { CREATE_STOCK_ITEM, UPDATE_STOCK_ITEM } from '../../graphql/mutation/remote'\nimport { getDate } from '../../utils/date'\n\nexport const defaults = {\n  name: {\n    type: 'text',\n    default: '',\n    required: true,\n  },\n  unit: {\n    type: 'text',\n    default: '',\n    required: true,\n  },\n  initValue: {\n    label: 'available',\n    type: 'number',\n    default: 0,\n    required: true,\n  },\n}\n\nclass CreateStockItem extends PureComponent<IProps> {\n  render() {\n    const { id } = this.props.match.params\n    return (\n      <Form\n        {...this.props}\n        query={STOCK_ITEM}\n        defaults={defaults}\n        skipOnUpdate={['initValue']}\n      >\n        {({ update, defaults, queryResult }: IFormProps) => {\n          return (\n            <FormGenerator\n              {...this.props}\n              defaults={defaults}\n              mutation={update ? UPDATE_STOCK_ITEM : CREATE_STOCK_ITEM}\n              title={!update ? 'Create a new Stock Item' : 'Update this Stock Item'}\n              submitText={!update ? 'Create StockItem' : 'Update StockItem'}\n              mutateFunc={(fn, data) => fn({ variables: { id, data } })}\n            >\n            </FormGenerator>\n          )\n        }}\n      </Form>\n    )\n  }\n}\n\nexport default CreateStockItem\n"],"sourceRoot":""}